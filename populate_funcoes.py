#!/usr/bin/env python
"""
Script para popular as tabelas TipoFuncao e Funcao com dados comuns para eventos
"""
import os
import sys
import django

# Configurar o Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'setup.settings')
django.setup()

from app_eventos.models import TipoFuncao, Funcao

def criar_tipos_funcao():
    """Cria os tipos de fun√ß√£o comuns para eventos"""
    
    tipos_funcao_data = [
        {
            'nome': 'Produ√ß√£o',
            'descricao': 'Fun√ß√µes relacionadas √† produ√ß√£o e execu√ß√£o do evento'
        },
        {
            'nome': 'T√©cnica',
            'descricao': 'Fun√ß√µes t√©cnicas e de equipamentos'
        },
        {
            'nome': 'Operacional',
            'descricao': 'Fun√ß√µes operacionais e log√≠sticas'
        },
        {
            'nome': 'Atendimento',
            'descricao': 'Fun√ß√µes de atendimento ao p√∫blico'
        },
        {
            'nome': 'Seguran√ßa',
            'descricao': 'Fun√ß√µes de seguran√ßa e controle de acesso'
        },
        {
            'nome': 'Administrativa',
            'descricao': 'Fun√ß√µes administrativas e de suporte'
        },
        {
            'nome': 'Criativa',
            'descricao': 'Fun√ß√µes criativas e art√≠sticas'
        },
        {
            'nome': 'Especializada',
            'descricao': 'Fun√ß√µes que requerem especializa√ß√£o espec√≠fica'
        },
        {
            'nome': 'Alimenta√ß√£o',
            'descricao': 'Fun√ß√µes relacionadas √† prepara√ß√£o e servi√ßo de alimentos e bebidas'
        }
    ]
    
    tipos_criados = []
    for tipo_data in tipos_funcao_data:
        tipo, created = TipoFuncao.objects.get_or_create(
            nome=tipo_data['nome'],
            defaults=tipo_data
        )
        if created:
            print(f"‚úÖ Tipo de fun√ß√£o criado: {tipo.nome}")
        else:
            print(f"‚ÑπÔ∏è  Tipo de fun√ß√£o j√° existe: {tipo.nome}")
        tipos_criados.append(tipo)
    
    return tipos_criados

def criar_funcoes(tipos_funcao):
    """Cria as fun√ß√µes espec√≠ficas para cada tipo"""
    
    # Mapear tipos de fun√ß√£o para suas fun√ß√µes espec√≠ficas
    funcoes_por_tipo = {
        'Produ√ß√£o': [
            {'nome': 'Produtor Executivo', 'descricao': 'Respons√°vel pela execu√ß√£o geral do evento'},
            {'nome': 'Produtor de Palco', 'descricao': 'Respons√°vel pela produ√ß√£o no palco'},
            {'nome': 'Coordenador de Produ√ß√£o', 'descricao': 'Coordena as atividades de produ√ß√£o'},
            {'nome': 'Assistente de Produ√ß√£o', 'descricao': 'Auxilia nas atividades de produ√ß√£o'},
        ],
        'T√©cnica': [
            {'nome': 'T√©cnico de Som', 'descricao': 'Respons√°vel pela opera√ß√£o de equipamentos de √°udio'},
            {'nome': 'T√©cnico de Ilumina√ß√£o', 'descricao': 'Respons√°vel pela opera√ß√£o de equipamentos de ilumina√ß√£o'},
            {'nome': 'T√©cnico de V√≠deo', 'descricao': 'Respons√°vel pela opera√ß√£o de equipamentos de v√≠deo'},
            {'nome': 'T√©cnico de Palco', 'descricao': 'Respons√°vel pela montagem e opera√ß√£o do palco'},
            {'nome': 'T√©cnico de Backline', 'descricao': 'Respons√°vel pelos instrumentos musicais'},
            {'nome': 'T√©cnico de RF', 'descricao': 'Respons√°vel por equipamentos de r√°dio frequ√™ncia'},
        ],
        'Operacional': [
            {'nome': 'Operador de Log√≠stica', 'descricao': 'Respons√°vel pela log√≠stica do evento'},
            {'nome': 'Montador de Estruturas', 'descricao': 'Respons√°vel pela montagem de estruturas'},
            {'nome': 'Operador de Eleva√ß√£o', 'descricao': 'Respons√°vel por equipamentos de eleva√ß√£o'},
            {'nome': 'Operador de Gerador', 'descricao': 'Respons√°vel pela opera√ß√£o de geradores'},
            {'nome': 'Operador de Ar Condicionado', 'descricao': 'Respons√°vel pelos sistemas de climatiza√ß√£o'},
        ],
        'Atendimento': [
            {'nome': 'Recepcionista', 'descricao': 'Atende o p√∫blico na recep√ß√£o'},
            {'nome': 'Anfitri√£o', 'descricao': 'Recebe e orienta os convidados'},
            {'nome': 'Atendente de Bar', 'descricao': 'Atende no bar do evento'},
            {'nome': 'Atendente de Buffet', 'descricao': 'Atende no buffet do evento'},
            {'nome': 'Hostess', 'descricao': 'Recepciona e orienta os convidados'},
        ],
        'Seguran√ßa': [
            {'nome': 'Seguran√ßa', 'descricao': 'Respons√°vel pela seguran√ßa do evento'},
            {'nome': 'Controlador de Acesso', 'descricao': 'Controla o acesso ao evento'},
            {'nome': 'Seguran√ßa de Palco', 'descricao': 'Respons√°vel pela seguran√ßa do palco'},
            {'nome': 'Seguran√ßa VIP', 'descricao': 'Respons√°vel pela seguran√ßa de convidados especiais'},
        ],
        'Administrativa': [
            {'nome': 'Assistente Administrativo', 'descricao': 'Auxilia nas tarefas administrativas'},
            {'nome': 'Controlador de Credenciais', 'descricao': 'Controla e distribui credenciais'},
            {'nome': 'Operador de Caixa', 'descricao': 'Opera caixas e sistemas de pagamento'},
            {'nome': 'Assistente de RH', 'descricao': 'Auxilia nas tarefas de recursos humanos'},
        ],
        'Criativa': [
            {'nome': 'Designer Gr√°fico', 'descricao': 'Respons√°vel pela identidade visual'},
            {'nome': 'Fot√≥grafo', 'descricao': 'Registra o evento em fotos'},
            {'nome': 'Videomaker', 'descricao': 'Registra o evento em v√≠deo'},
            {'nome': 'Decorador', 'descricao': 'Respons√°vel pela decora√ß√£o do evento'},
            {'nome': 'Maquiador', 'descricao': 'Respons√°vel pela maquiagem'},
        ],
        'Especializada': [
            {'nome': 'Int√©rprete de Libras', 'descricao': 'Faz interpreta√ß√£o em Libras'},
            {'nome': 'Tradutor', 'descricao': 'Faz tradu√ß√£o simult√¢nea'},
            {'nome': 'M√©dico', 'descricao': 'Atendimento m√©dico de emerg√™ncia'},
            {'nome': 'Enfermeiro', 'descricao': 'Auxiliar m√©dico'},
            {'nome': 'Bombeiro Civil', 'descricao': 'Respons√°vel pela seguran√ßa contra inc√™ndio'},
        ],
        'Alimenta√ß√£o': [
            {'nome': 'Chef de Cozinha', 'descricao': 'Respons√°vel pela prepara√ß√£o dos pratos principais'},
            {'nome': 'Sous Chef', 'descricao': 'Auxiliar do chef de cozinha'},
            {'nome': 'Cozinheiro', 'descricao': 'Prepara alimentos e pratos'},
            {'nome': 'Auxiliar de Cozinha', 'descricao': 'Auxilia na prepara√ß√£o de alimentos'},
            {'nome': 'Chapeiro', 'descricao': 'Respons√°vel pela prepara√ß√£o de carnes e grelhados'},
            {'nome': 'Salgadeiro', 'descricao': 'Prepara salgados e canap√©s'},
            {'nome': 'Confeiteiro', 'descricao': 'Prepara sobremesas e doces'},
            {'nome': 'Padeiro', 'descricao': 'Prepara p√£es e massas'},
            {'nome': 'Gar√ßom', 'descricao': 'Atende mesas e serve refei√ß√µes'},
            {'nome': 'Bartender', 'descricao': 'Prepara e serve bebidas alco√≥licas'},
            {'nome': 'Sommelier', 'descricao': 'Especialista em vinhos'},
            {'nome': 'Barista', 'descricao': 'Prepara e serve caf√© e bebidas quentes'},
            {'nome': 'Atendente de Buffet', 'descricao': 'Atende no buffet self-service'},
            {'nome': 'Lavador de Lou√ßas', 'descricao': 'Respons√°vel pela limpeza de lou√ßas e utens√≠lios'},
            {'nome': 'Estoquista de Alimentos', 'descricao': 'Controla estoque de alimentos e bebidas'},
            {'nome': 'Auxiliar de Servi√ßo', 'descricao': 'Auxilia no servi√ßo de alimenta√ß√£o'},
        ]
    }
    
    funcoes_criadas = 0
    for tipo in tipos_funcao:
        if tipo.nome in funcoes_por_tipo:
            for funcao_data in funcoes_por_tipo[tipo.nome]:
                funcao, created = Funcao.objects.get_or_create(
                    nome=funcao_data['nome'],
                    tipo_funcao=tipo,
                    defaults=funcao_data
                )
                if created:
                    print(f"‚úÖ Fun√ß√£o criada: {funcao.nome} ({tipo.nome})")
                    funcoes_criadas += 1
                else:
                    print(f"‚ÑπÔ∏è  Fun√ß√£o j√° existe: {funcao.nome} ({tipo.nome})")
    
    return funcoes_criadas

def main():
    """Fun√ß√£o principal do script"""
    print("üöÄ Iniciando popula√ß√£o das tabelas de fun√ß√µes...")
    print("=" * 50)
    
    # Criar tipos de fun√ß√£o
    print("\nüìã Criando tipos de fun√ß√£o...")
    tipos_funcao = criar_tipos_funcao()
    
    # Criar fun√ß√µes
    print("\nüë• Criando fun√ß√µes espec√≠ficas...")
    total_funcoes = criar_funcoes(tipos_funcao)
    
    # Resumo final
    print("\n" + "=" * 50)
    print("üìä RESUMO:")
    print(f"‚Ä¢ Tipos de fun√ß√£o: {len(tipos_funcao)}")
    print(f"‚Ä¢ Fun√ß√µes criadas: {total_funcoes}")
    print(f"‚Ä¢ Total de fun√ß√µes no sistema: {Funcao.objects.count()}")
    print("=" * 50)
    print("‚úÖ Popula√ß√£o conclu√≠da com sucesso!")

if __name__ == '__main__':
    main()
