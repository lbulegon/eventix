# Generated by Django 5.1.5 on 2025-08-14 20:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('email', models.EmailField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Funcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('EMPREGADOR', 'Empregador'), ('FREELANCER', 'Freelancer')], max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmada', 'Confirmada pelo candidato'), ('aceita_empresa', 'Aceita pela empresa'), ('recusada', 'Recusada'), ('cancelada', 'Cancelada')], default='pendente', max_length=20)),
                ('data_candidatura', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=80)),
                ('data_inicio', models.DateTimeField()),
                ('data_fim', models.DateTimeField()),
                ('meta_cmv', models.FloatField(blank=True, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='app_eventos.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='FreelanceProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identidade', models.CharField(blank=True, max_length=255, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('mob_no', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='freelance_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setores', to='app_eventos.evento')),
            ],
        ),
        migrations.CreateModel(
            name='AlocacaoFinal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_alocacao', models.DateTimeField(auto_now_add=True)),
                ('candidatura', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='alocacao_final', to='app_eventos.candidatura')),
                ('funcao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_eventos.funcao')),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_eventos.setor')),
            ],
        ),
        migrations.CreateModel(
            name='Vaga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('aberta', 'Aberta'), ('fechada', 'Fechada'), ('em_andamento', 'Em andamento'), ('finalizada', 'Finalizada')], default='aberta', max_length=20)),
                ('funcao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas', to='app_eventos.funcao')),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas', to='app_eventos.setor')),
            ],
        ),
        migrations.AddField(
            model_name='candidatura',
            name='vaga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='app_eventos.vaga'),
        ),
        migrations.CreateModel(
            name='EmpresaUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('papel', models.CharField(choices=[('OWNER', 'Propriet√°rio'), ('MANAGER', 'Gestor')], default='MANAGER', max_length=20)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membros', to='app_eventos.empresa')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empresas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('empresa', 'user')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='candidatura',
            unique_together={('vaga', 'user')},
        ),
    ]
