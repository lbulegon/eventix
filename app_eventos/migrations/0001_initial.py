# Generated by Django 5.1.5 on 2025-08-17 00:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmpresaContratante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome da Empresa')),
                ('cnpj', models.CharField(max_length=18, unique=True, verbose_name='CNPJ')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(max_length=255, verbose_name='Nome Fantasia')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('website', models.URLField(blank=True, null=True)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('data_contratacao', models.DateField(auto_now_add=True, verbose_name='Data de Contratação')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('plano_contratado', models.CharField(max_length=50, verbose_name='Plano Contratado')),
                ('valor_mensal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Mensal')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Empresa Contratante',
                'verbose_name_plural': 'Empresas Contratantes',
            },
        ),
        migrations.CreateModel(
            name='TipoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Empresa',
                'verbose_name_plural': 'Tipos de Empresas',
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='empresas_parceiras', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('tipo_empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empresas', to='app_eventos.tipoempresa')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'unique_together': {('empresa_contratante', 'cnpj')},
            },
        ),
        migrations.CreateModel(
            name='CategoriaEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categorias_equipamentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Categoria de Equipamento',
                'verbose_name_plural': 'Categorias de Equipamentos',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('admin_empresa', 'Administrador da Empresa'), ('operador_empresa', 'Operador da Empresa'), ('freelancer', 'Freelancer'), ('admin_sistema', 'Administrador do Sistema')], default='freelancer', max_length=20)),
                ('ativo', models.BooleanField(default=True)),
                ('data_ultimo_acesso', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_patrimonial', models.CharField(blank=True, max_length=200, null=True, verbose_name='Código Patrimonial')),
                ('descricao', models.TextField(blank=True, null=True)),
                ('especificacoes_tecnicas', models.TextField(blank=True, null=True)),
                ('marca', models.CharField(blank=True, max_length=100, null=True)),
                ('modelo', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_serie', models.CharField(blank=True, max_length=100, null=True)),
                ('data_aquisicao', models.DateField(blank=True, null=True)),
                ('valor_aquisicao', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estado_conservacao', models.CharField(choices=[('excelente', 'Excelente'), ('bom', 'Bom'), ('regular', 'Regular'), ('ruim', 'Ruim'), ('inutilizavel', 'Inutilizável')], default='bom', max_length=20)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='equipamentos/fotos/')),
                ('manual_instrucoes', models.FileField(blank=True, null=True, upload_to='equipamentos/manuais/')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to='app_eventos.categoriaequipamento')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('empresa_proprietaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to='app_eventos.empresa', verbose_name='Empresa Proprietária')),
            ],
            options={
                'verbose_name': 'Equipamento',
                'verbose_name_plural': 'Equipamentos',
            },
        ),
        migrations.CreateModel(
            name='Freelance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('documento', models.CharField(blank=True, max_length=50, null=True)),
                ('habilidades', models.TextField(blank=True, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('rg', models.CharField(blank=True, max_length=20, null=True)),
                ('orgao_expedidor', models.CharField(blank=True, max_length=20, null=True)),
                ('uf_rg', models.CharField(blank=True, max_length=2, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, null=True)),
                ('estado_civil', models.CharField(blank=True, choices=[('solteiro', 'Solteiro(a)'), ('casado', 'Casado(a)'), ('divorciado', 'Divorciado(a)'), ('viuvo', 'Viúvo(a)')], max_length=20, null=True)),
                ('nacionalidade', models.CharField(blank=True, default='Brasileira', max_length=50, null=True)),
                ('naturalidade', models.CharField(blank=True, max_length=100, null=True)),
                ('nome_mae', models.CharField(blank=True, max_length=255, null=True)),
                ('nome_pai', models.CharField(blank=True, max_length=255, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='freelancers/fotos/')),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('pis_pasep', models.CharField(blank=True, max_length=20, null=True)),
                ('carteira_trabalho_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('carteira_trabalho_serie', models.CharField(blank=True, max_length=10, null=True)),
                ('titulo_eleitor', models.CharField(blank=True, max_length=20, null=True)),
                ('cnh_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('cnh_categoria', models.CharField(blank=True, max_length=5, null=True)),
                ('certificado_reservista', models.CharField(blank=True, max_length=20, null=True)),
                ('banco', models.CharField(blank=True, max_length=100, null=True)),
                ('agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('conta', models.CharField(blank=True, max_length=20, null=True)),
                ('tipo_conta', models.CharField(blank=True, choices=[('corrente', 'Conta Corrente'), ('poupanca', 'Poupança'), ('pix', 'PIX')], max_length=20, null=True)),
                ('chave_pix', models.CharField(blank=True, max_length=100, null=True)),
                ('arquivo_exame_medico', models.FileField(blank=True, null=True, upload_to='freelancers/documentos/exame_medico/')),
                ('arquivo_comprovante_residencia', models.FileField(blank=True, null=True, upload_to='freelancers/documentos/comprovante_residencia/')),
                ('arquivo_identidade_frente', models.ImageField(blank=True, null=True, upload_to='freelancers/documentos/identidade/')),
                ('arquivo_identidade_verso', models.ImageField(blank=True, null=True, upload_to='freelancers/documentos/identidade/')),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('observacoes_medicas', models.TextField(blank=True, null=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('cadastro_completo', models.BooleanField(default=False)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocalEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('endereco', models.CharField(max_length=255)),
                ('capacidade', models.IntegerField()),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locais_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('empresa_proprietaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locais', to='app_eventos.empresa', verbose_name='Empresa Proprietária')),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, null=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('empresa_contratante_mao_obra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos_contratados', to='app_eventos.empresa', verbose_name='Empresa Contratante de Mão de Obra')),
                ('empresa_produtora', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eventos_produzidos', to='app_eventos.empresa')),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='app_eventos.localevento')),
            ],
        ),
        migrations.CreateModel(
            name='ManutencaoEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_manutencao', models.CharField(choices=[('preventiva', 'Preventiva'), ('corretiva', 'Corretiva'), ('calibracao', 'Calibração')], max_length=20)),
                ('descricao', models.TextField()),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('custo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fornecedor', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('agendada', 'Agendada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='agendada', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manutencoes', to='app_eventos.equipamento')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manutencoes_realizadas', to='app_eventos.freelance')),
            ],
            options={
                'verbose_name': 'Manutenção de Equipamento',
                'verbose_name_plural': 'Manutenções de Equipamentos',
            },
        ),
        migrations.CreateModel(
            name='SetorEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setores', to='app_eventos.evento')),
            ],
        ),
        migrations.CreateModel(
            name='TipoFuncao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tipos_funcao', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Funcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('tipo_funcao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcoes', to='app_eventos.tipofuncao')),
            ],
        ),
        migrations.CreateModel(
            name='Vaga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('quantidade', models.PositiveIntegerField()),
                ('remuneracao', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativa', models.BooleanField(default=True)),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas', to='app_eventos.setorevento')),
            ],
        ),
        migrations.CreateModel(
            name='ContratoFreelance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_contratacao', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], default='ativo', max_length=20)),
                ('freelance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contratacoes', to='app_eventos.freelance')),
                ('vaga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='freelances_contratados', to='app_eventos.vaga')),
            ],
        ),
        migrations.CreateModel(
            name='Candidatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_candidatura', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], default='pendente', max_length=20)),
                ('freelance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas_pendentes', to='app_eventos.freelance')),
                ('vaga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='app_eventos.vaga')),
            ],
        ),
        migrations.CreateModel(
            name='EquipamentoSetor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_necessaria', models.PositiveIntegerField(default=1)),
                ('quantidade_disponivel', models.PositiveIntegerField(default=0)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('data_inicio_uso', models.DateTimeField(blank=True, null=True)),
                ('data_fim_uso', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('disponivel', 'Disponível'), ('em_uso', 'Em Uso'), ('manutencao', 'Em Manutenção'), ('indisponivel', 'Indisponível')], default='disponivel', max_length=20)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setores_utilizacao', to='app_eventos.equipamento')),
                ('responsavel_equipamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipamentos_responsavel', to='app_eventos.freelance')),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos_setor', to='app_eventos.setorevento')),
            ],
            options={
                'verbose_name': 'Equipamento do Setor',
                'verbose_name_plural': 'Equipamentos do Setor',
                'unique_together': {('setor', 'equipamento')},
            },
        ),
    ]
