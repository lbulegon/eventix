# Generated by Django 5.1.5 on 2025-09-04 16:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_eventos', '0009_equipamento_nome_localevento_descricao_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppFieldWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcoes_habilitadas', models.JSONField(default=list, verbose_name='Funções Habilitadas')),
                ('permissoes_especiais', models.JSONField(default=dict, verbose_name='Permissões Especiais')),
                ('configuracao_offline', models.JSONField(default=dict, verbose_name='Configuração Offline')),
                ('ultima_sincronizacao', models.DateTimeField(blank=True, null=True, verbose_name='Última Sincronização')),
                ('versao_app', models.CharField(blank=True, max_length=20, null=True, verbose_name='Versão do App')),
                ('dispositivo_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID do Dispositivo')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='field_workers', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('setores_acesso', models.ManyToManyField(blank=True, related_name='field_workers_acesso', to='app_eventos.setorevento', verbose_name='Setores com Acesso')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config_field_worker', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Field Worker',
                'verbose_name_plural': 'Field Workers',
            },
        ),
        migrations.CreateModel(
            name='AvaliacaoEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_avaliador', models.CharField(choices=[('cliente', 'Cliente'), ('participante', 'Participante'), ('fornecedor', 'Fornecedor'), ('freelancer', 'Freelancer'), ('interno', 'Interno')], max_length=20, verbose_name='Tipo de Avaliador')),
                ('nome_avaliador', models.CharField(max_length=200, verbose_name='Nome do Avaliador')),
                ('email_avaliador', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email do Avaliador')),
                ('nota_geral', models.PositiveIntegerField(verbose_name='Nota Geral (1-10)')),
                ('comentarios', models.TextField(blank=True, null=True, verbose_name='Comentários')),
                ('aspectos_positivos', models.TextField(blank=True, null=True, verbose_name='Aspectos Positivos')),
                ('aspectos_melhorar', models.TextField(blank=True, null=True, verbose_name='Aspectos a Melhorar')),
                ('recomendaria', models.BooleanField(default=True, verbose_name='Recomendaria')),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Avaliação')),
                ('anonima', models.BooleanField(default=False, verbose_name='Avaliação Anônima')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='app_eventos.evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Avaliação de Evento',
                'verbose_name_plural': 'Avaliações de Eventos',
                'ordering': ['-data_avaliacao'],
            },
        ),
        migrations.CreateModel(
            name='AvaliacaoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('qualidade', 'Qualidade'), ('prazo', 'Prazo'), ('atendimento', 'Atendimento'), ('preco', 'Preço'), ('geral', 'Geral')], max_length=20, verbose_name='Tipo')),
                ('nota', models.PositiveIntegerField(verbose_name='Nota (1-10)')),
                ('comentarios', models.TextField(verbose_name='Comentários')),
                ('aspectos_positivos', models.TextField(blank=True, null=True, verbose_name='Aspectos Positivos')),
                ('aspectos_melhorar', models.TextField(blank=True, null=True, verbose_name='Aspectos a Melhorar')),
                ('recomendaria', models.BooleanField(default=True, verbose_name='Recomendaria')),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Avaliação')),
                ('anonima', models.BooleanField(default=False, verbose_name='Avaliação Anônima')),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_fornecedores_dadas', to=settings.AUTH_USER_MODEL, verbose_name='Avaliador')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_fornecedores', to='app_eventos.evento', verbose_name='Evento')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='app_eventos.fornecedor', verbose_name='Fornecedor')),
            ],
            options={
                'verbose_name': 'Avaliação de Fornecedor',
                'verbose_name_plural': 'Avaliações de Fornecedores',
                'ordering': ['-data_avaliacao'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistMobile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_limite', models.DateTimeField(verbose_name='Data Limite')),
                ('data_inicio', models.DateTimeField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_conclusao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão')),
                ('localizacao_inicio', models.JSONField(blank=True, null=True, verbose_name='Localização de Início')),
                ('localizacao_fim', models.JSONField(blank=True, null=True, verbose_name='Localização de Fim')),
                ('fotos_evidencia', models.JSONField(default=list, verbose_name='Fotos de Evidência')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklists_mobile', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklists_mobile', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklists_mobile_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
                ('setor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklists_mobile', to='app_eventos.setorevento', verbose_name='Setor')),
            ],
            options={
                'verbose_name': 'Checklist Mobile',
                'verbose_name_plural': 'Checklists Mobile',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='ComparativoEventos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Comparação')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('metricas_comparadas', models.JSONField(default=list, verbose_name='Métricas Comparadas')),
                ('criterios_comparacao', models.JSONField(default=dict, verbose_name='Critérios de Comparação')),
                ('resultado_comparacao', models.JSONField(blank=True, default=dict, verbose_name='Resultado da Comparação')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comparativos_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('eventos', models.ManyToManyField(related_name='comparativos', to='app_eventos.evento', verbose_name='Eventos')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparativos_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Comparativo de Eventos',
                'verbose_name_plural': 'Comparativos de Eventos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('licenca', 'Licença'), ('alvara', 'Alvará'), ('certificado', 'Certificado'), ('seguro', 'Seguro'), ('contrato', 'Contrato'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo')),
                ('nome_documento', models.CharField(max_length=200, verbose_name='Nome do Documento')),
                ('numero_documento', models.CharField(max_length=100, verbose_name='Número do Documento')),
                ('orgao_emissor', models.CharField(max_length=200, verbose_name='Órgão Emissor')),
                ('data_emissao', models.DateField(verbose_name='Data de Emissão')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_analise', 'Em Análise'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('vencido', 'Vencido'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status')),
                ('arquivo_documento', models.FileField(blank=True, null=True, upload_to='compliance/', verbose_name='Arquivo do Documento')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Compliance de Evento',
                'verbose_name_plural': 'Compliance de Eventos',
                'ordering': ['data_vencimento'],
            },
        ),
        migrations.CreateModel(
            name='ContratoInteligente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('freelancer', 'Freelancer'), ('fornecedor', 'Fornecedor'), ('cliente', 'Cliente'), ('parceiro', 'Parceiro')], max_length=20, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('template_contrato', models.TextField(verbose_name='Template do Contrato')),
                ('clausulas_automaticas', models.JSONField(default=list, verbose_name='Cláusulas Automáticas')),
                ('condicoes_ativacao', models.JSONField(default=dict, verbose_name='Condições de Ativação')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('pendente_assinatura', 'Pendente Assinatura'), ('ativo', 'Ativo'), ('vencido', 'Vencido'), ('cancelado', 'Cancelado')], default='rascunho', max_length=30, verbose_name='Status')),
                ('valor_contrato', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor do Contrato')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Fim')),
                ('assinaturas', models.JSONField(default=list, verbose_name='Assinaturas')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_ativacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Ativação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contratos_inteligentes', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contratos_inteligentes', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contratos_inteligentes_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Contrato Inteligente',
                'verbose_name_plural': 'Contratos Inteligentes',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='DashboardPersonalizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Dashboard')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('layout_config', models.JSONField(default=dict, verbose_name='Configuração do Layout')),
                ('widgets_config', models.JSONField(default=list, verbose_name='Configuração dos Widgets')),
                ('filtros_padrao', models.JSONField(blank=True, default=dict, verbose_name='Filtros Padrão')),
                ('publico', models.BooleanField(default=False, verbose_name='Público')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dashboards_personalizados', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboards_personalizados', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Dashboard Personalizado',
                'verbose_name_plural': 'Dashboards Personalizados',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='DeteccaoAnomalias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('financeira', 'Financeira'), ('operacional', 'Operacional'), ('qualidade', 'Qualidade'), ('seguranca', 'Segurança'), ('performance', 'Performance'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo')),
                ('severidade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('critica', 'Crítica')], max_length=20, verbose_name='Severidade')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('dados_anomalia', models.JSONField(verbose_name='Dados da Anomalia')),
                ('algoritmo_deteccao', models.CharField(max_length=100, verbose_name='Algoritmo de Detecção')),
                ('confiabilidade', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Confiabilidade (%)')),
                ('status', models.CharField(default='detectada', max_length=20, verbose_name='Status')),
                ('acao_tomada', models.TextField(blank=True, null=True, verbose_name='Ação Tomada')),
                ('data_deteccao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Detecção')),
                ('data_resolucao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Resolução')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deteccoes_anomalias', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deteccoes_anomalias', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anomalias_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Detecção de Anomalia',
                'verbose_name_plural': 'Detecções de Anomalias',
                'ordering': ['-data_deteccao'],
            },
        ),
        migrations.CreateModel(
            name='ExpansaoMercado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_projeto', models.CharField(max_length=200, verbose_name='Nome do Projeto')),
                ('tipo', models.CharField(choices=[('geografico', 'Geográfico'), ('segmento', 'Segmento'), ('produto', 'Produto'), ('servico', 'Serviço')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('mercado_alvo', models.CharField(max_length=200, verbose_name='Mercado Alvo')),
                ('analise_mercado', models.JSONField(default=dict, verbose_name='Análise de Mercado')),
                ('estrategia_expansao', models.TextField(verbose_name='Estratégia de Expansão')),
                ('investimento_necessario', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Investimento Necessário')),
                ('retorno_esperado', models.JSONField(default=dict, verbose_name='Retorno Esperado')),
                ('riscos_identificados', models.JSONField(default=list, verbose_name='Riscos Identificados')),
                ('cronograma', models.JSONField(default=dict, verbose_name='Cronograma')),
                ('status', models.CharField(choices=[('analise', 'Análise'), ('planejamento', 'Planejamento'), ('implementacao', 'Implementação'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='analise', max_length=20, verbose_name='Status')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim_prevista', models.DateField(verbose_name='Data de Fim Prevista')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expansoes_mercado', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expansoes_mercado_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Expansão de Mercado',
                'verbose_name_plural': 'Expansões de Mercado',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackFreelancer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('positivo', 'Positivo'), ('negativo', 'Negativo'), ('neutro', 'Neutro'), ('sugestao', 'Sugestão')], max_length=20, verbose_name='Tipo')),
                ('nota_desempenho', models.PositiveIntegerField(verbose_name='Nota de Desempenho (1-10)')),
                ('comentarios', models.TextField(verbose_name='Comentários')),
                ('aspectos_destacar', models.TextField(blank=True, null=True, verbose_name='Aspectos a Destacar')),
                ('areas_melhorar', models.TextField(blank=True, null=True, verbose_name='Áreas a Melhorar')),
                ('recomendaria', models.BooleanField(default=True, verbose_name='Recomendaria')),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Avaliação')),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_dados', to=settings.AUTH_USER_MODEL, verbose_name='Avaliador')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_freelancers', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_freelancers', to='app_eventos.evento', verbose_name='Evento')),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='app_eventos.freelance', verbose_name='Freelancer')),
            ],
            options={
                'verbose_name': 'Feedback de Freelancer',
                'verbose_name_plural': 'Feedbacks de Freelancers',
                'ordering': ['-data_avaliacao'],
            },
        ),
        migrations.CreateModel(
            name='FranchiseEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_franquia', models.CharField(max_length=200, verbose_name='Nome da Franquia')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('modelo_negocio', models.TextField(verbose_name='Modelo de Negócio')),
                ('investimento_inicial', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Investimento Inicial')),
                ('taxa_franquia', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Taxa de Franquia (%)')),
                ('royalties', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Royalties (%)')),
                ('suporte_incluido', models.JSONField(default=list, verbose_name='Suporte Incluído')),
                ('requisitos_franqueado', models.JSONField(default=list, verbose_name='Requisitos do Franqueado')),
                ('territorio_exclusivo', models.BooleanField(default=False, verbose_name='Território Exclusivo')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('aprovado', 'Aprovado'), ('ativo', 'Ativo'), ('suspenso', 'Suspenso'), ('cancelado', 'Cancelado')], default='rascunho', max_length=20, verbose_name='Status')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='franchises', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='franchises_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Franquia de Evento',
                'verbose_name_plural': 'Franquias de Eventos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='GeolocalizacaoEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude')),
                ('altitude', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Altitude')),
                ('precisao', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Precisão (metros)')),
                ('endereco', models.CharField(blank=True, max_length=500, null=True, verbose_name='Endereço')),
                ('data_rastreamento', models.DateTimeField(auto_now_add=True, verbose_name='Data de Rastreamento')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geolocalizacoes', to='app_eventos.equipamento', verbose_name='Equipamento')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geolocalizacoes_equipamentos', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geolocalizacoes_equipamentos', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Geolocalização de Equipamento',
                'verbose_name_plural': 'Geolocalizações de Equipamentos',
                'ordering': ['-data_rastreamento'],
            },
        ),
        migrations.CreateModel(
            name='IndicadorQualidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Indicador')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('quantitativo', 'Quantitativo'), ('qualitativo', 'Qualitativo'), ('misto', 'Misto')], max_length=20, verbose_name='Tipo')),
                ('formula_calculo', models.TextField(verbose_name='Fórmula de Cálculo')),
                ('meta_objetivo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Meta Objetivo')),
                ('unidade_medida', models.CharField(max_length=50, verbose_name='Unidade de Medida')),
                ('frequencia_medicao', models.CharField(max_length=50, verbose_name='Frequência de Medição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicadores_qualidade', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicadores_qualidade_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Indicador de Qualidade',
                'verbose_name_plural': 'Indicadores de Qualidade',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='IntegracaoERP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Integração')),
                ('tipo_sistema', models.CharField(choices=[('sap', 'SAP'), ('oracle', 'Oracle'), ('microsoft_dynamics', 'Microsoft Dynamics'), ('totvs', 'TOTVS'), ('senior', 'Senior'), ('outro', 'Outro')], max_length=30, verbose_name='Tipo de Sistema')),
                ('url_api', models.URLField(verbose_name='URL da API')),
                ('credenciais', models.JSONField(verbose_name='Credenciais')),
                ('configuracoes', models.JSONField(default=dict, verbose_name='Configurações')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('erro', 'Erro'), ('manutencao', 'Manutenção')], default='ativo', max_length=20, verbose_name='Status')),
                ('ultima_sincronizacao', models.DateTimeField(blank=True, null=True, verbose_name='Última Sincronização')),
                ('frequencia_sincronizacao', models.CharField(max_length=50, verbose_name='Frequência de Sincronização')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='integracoes_erp', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integracoes_erp_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Integração ERP',
                'verbose_name_plural': 'Integrações ERP',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ItemChecklistMobile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=500, verbose_name='Descrição')),
                ('instrucoes', models.TextField(blank=True, null=True, verbose_name='Instruções')),
                ('ordem', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('concluido', 'Concluído'), ('problema', 'Problema'), ('nao_aplicavel', 'Não Aplicável')], default='pendente', max_length=20, verbose_name='Status')),
                ('obrigatorio', models.BooleanField(default=True, verbose_name='Obrigatório')),
                ('permite_foto', models.BooleanField(default=False, verbose_name='Permite Foto')),
                ('permite_comentario', models.BooleanField(default=True, verbose_name='Permite Comentário')),
                ('comentario', models.TextField(blank=True, null=True, verbose_name='Comentário')),
                ('fotos', models.JSONField(default=list, verbose_name='Fotos')),
                ('data_conclusao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão')),
                ('localizacao', models.JSONField(blank=True, null=True, verbose_name='Localização')),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='app_eventos.checklistmobile', verbose_name='Checklist')),
            ],
            options={
                'verbose_name': 'Item Checklist Mobile',
                'verbose_name_plural': 'Itens Checklist Mobile',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='Licenciamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_licenca', models.CharField(max_length=200, verbose_name='Nome da Licença')),
                ('tipo', models.CharField(choices=[('metodologia', 'Metodologia'), ('processo', 'Processo'), ('tecnologia', 'Tecnologia'), ('marca', 'Marca'), ('conhecimento', 'Conhecimento')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('valor_licenca', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor da Licença')),
                ('duracao_licenca', models.CharField(max_length=100, verbose_name='Duração da Licença')),
                ('termos_uso', models.TextField(verbose_name='Termos de Uso')),
                ('restricoes', models.JSONField(default=list, verbose_name='Restrições')),
                ('beneficios_incluidos', models.JSONField(default=list, verbose_name='Benefícios Incluídos')),
                ('suporte_incluido', models.JSONField(default=list, verbose_name='Suporte Incluído')),
                ('status', models.CharField(choices=[('disponivel', 'Disponível'), ('licenciado', 'Licenciado'), ('exclusivo', 'Exclusivo'), ('suspenso', 'Suspenso')], default='disponivel', max_length=20, verbose_name='Status')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenciamentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenciamentos_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Licenciamento',
                'verbose_name_plural': 'Licenciamentos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceFreelancer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('suspenso', 'Suspenso'), ('verificando', 'Verificando')], default='verificando', max_length=20, verbose_name='Status')),
                ('perfil_publico', models.JSONField(default=dict, verbose_name='Perfil Público')),
                ('portfolio', models.JSONField(default=list, verbose_name='Portfolio')),
                ('especialidades', models.JSONField(default=list, verbose_name='Especialidades')),
                ('disponibilidade', models.JSONField(default=dict, verbose_name='Disponibilidade')),
                ('avaliacao_media', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Avaliação Média')),
                ('total_avaliacoes', models.PositiveIntegerField(default=0, verbose_name='Total de Avaliações')),
                ('projetos_concluidos', models.PositiveIntegerField(default=0, verbose_name='Projetos Concluídos')),
                ('taxa_sucesso', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taxa de Sucesso (%)')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Última Atualização')),
                ('freelancer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='marketplace', to='app_eventos.freelance', verbose_name='Freelancer')),
            ],
            options={
                'verbose_name': 'Marketplace Freelancer',
                'verbose_name_plural': 'Marketplace Freelancers',
            },
        ),
        migrations.CreateModel(
            name='MetricaEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Métrica')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('financeiro', 'Financeiro'), ('operacional', 'Operacional'), ('qualidade', 'Qualidade'), ('satisfacao', 'Satisfação'), ('produtividade', 'Produtividade'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo')),
                ('valor_objetivo', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Objetivo')),
                ('valor_real', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Real')),
                ('unidade_medida', models.CharField(max_length=50, verbose_name='Unidade de Medida')),
                ('data_medicao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Medição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metricas_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metricas', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metricas_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Métrica de Evento',
                'verbose_name_plural': 'Métricas de Eventos',
                'ordering': ['-data_medicao'],
            },
        ),
        migrations.CreateModel(
            name='NotificacaoAutomatica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('tipo', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('sistema', 'Sistema'), ('whatsapp', 'WhatsApp')], max_length=20, verbose_name='Tipo')),
                ('destinatarios', models.JSONField(default=list, verbose_name='Destinatários')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('enviada', 'Enviada'), ('falhou', 'Falhou'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_agendamento', models.DateTimeField(verbose_name='Data de Agendamento')),
                ('data_envio', models.DateTimeField(blank=True, null=True, verbose_name='Data de Envio')),
                ('tentativas_envio', models.PositiveIntegerField(default=0, verbose_name='Tentativas de Envio')),
                ('erro_envio', models.TextField(blank=True, null=True, verbose_name='Erro no Envio')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes_automaticas', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento_relacionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='app_eventos.evento', verbose_name='Evento Relacionado')),
            ],
            options={
                'verbose_name': 'Notificação Automática',
                'verbose_name_plural': 'Notificações Automáticas',
                'ordering': ['-data_agendamento'],
            },
        ),
        migrations.CreateModel(
            name='OtimizacaoRecursos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('equipamentos', 'Equipamentos'), ('pessoal', 'Pessoal'), ('espaco', 'Espaço'), ('tempo', 'Tempo'), ('custo', 'Custo'), ('qualidade', 'Qualidade')], max_length=20, verbose_name='Tipo')),
                ('algoritmo_ia', models.CharField(max_length=100, verbose_name='Algoritmo de IA')),
                ('configuracao_atual', models.JSONField(verbose_name='Configuração Atual')),
                ('configuracao_otimizada', models.JSONField(verbose_name='Configuração Otimizada')),
                ('ganho_estimado', models.JSONField(verbose_name='Ganho Estimado')),
                ('status', models.CharField(choices=[('analisando', 'Analisando'), ('otimizada', 'Otimizada'), ('aplicada', 'Aplicada'), ('rejeitada', 'Rejeitada')], default='analisando', max_length=20, verbose_name='Status')),
                ('data_otimizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Otimização')),
                ('data_aplicacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Aplicação')),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otimizacoes_aprovadas', to=settings.AUTH_USER_MODEL, verbose_name='Aprovado por')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otimizacoes_recursos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otimizacoes_recursos', to='app_eventos.evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Otimização de Recursos',
                'verbose_name_plural': 'Otimizações de Recursos',
                'ordering': ['-data_otimizacao'],
            },
        ),
        migrations.CreateModel(
            name='ParceriaEstrategica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_parceria', models.CharField(max_length=200, verbose_name='Nome da Parceria')),
                ('tipo', models.CharField(choices=[('comercial', 'Comercial'), ('tecnologica', 'Tecnológica'), ('operacional', 'Operacional'), ('estrategica', 'Estratégica'), ('distribuicao', 'Distribuição')], max_length=20, verbose_name='Tipo')),
                ('parceiro_nome', models.CharField(max_length=200, verbose_name='Nome do Parceiro')),
                ('parceiro_contato', models.JSONField(default=dict, verbose_name='Contato do Parceiro')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('objetivos', models.JSONField(default=list, verbose_name='Objetivos')),
                ('beneficios_esperados', models.JSONField(default=list, verbose_name='Benefícios Esperados')),
                ('responsabilidades', models.JSONField(default=dict, verbose_name='Responsabilidades')),
                ('investimento_necessario', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Investimento Necessário')),
                ('retorno_esperado', models.JSONField(default=dict, verbose_name='Retorno Esperado')),
                ('status', models.CharField(choices=[('proposta', 'Proposta'), ('negociacao', 'Negociação'), ('ativa', 'Ativa'), ('suspensa', 'Suspensa'), ('encerrada', 'Encerrada')], default='proposta', max_length=20, verbose_name='Status')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Fim')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcerias_estrategicas', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcerias_estrategicas_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Parceria Estratégica',
                'verbose_name_plural': 'Parcerias Estratégicas',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='PesquisaSatisfacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título da Pesquisa')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('ativa', 'Ativa'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada')], default='rascunho', max_length=20, verbose_name='Status')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de Fim')),
                ('link_pesquisa', models.URLField(blank=True, null=True, verbose_name='Link da Pesquisa')),
                ('total_respostas', models.PositiveIntegerField(default=0, verbose_name='Total de Respostas')),
                ('meta_respostas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meta de Respostas')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisas_satisfacao', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisas_satisfacao', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisas_satisfacao_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Pesquisa de Satisfação',
                'verbose_name_plural': 'Pesquisas de Satisfação',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='PlanoContingencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título do Plano')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('cenario', models.TextField(verbose_name='Cenário')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('aprovado', 'Aprovado'), ('ativo', 'Ativo'), ('executado', 'Executado'), ('cancelado', 'Cancelado')], default='rascunho', max_length=20, verbose_name='Status')),
                ('acoes_emergencia', models.JSONField(default=list, verbose_name='Ações de Emergência')),
                ('responsaveis', models.JSONField(default=list, verbose_name='Responsáveis')),
                ('contatos_emergencia', models.JSONField(default=list, verbose_name='Contatos de Emergência')),
                ('recursos_necessarios', models.JSONField(default=list, verbose_name='Recursos Necessários')),
                ('tempo_resposta', models.CharField(max_length=100, verbose_name='Tempo de Resposta')),
                ('custo_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo Estimado')),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Aprovação')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planos_contingencia_aprovados', to=settings.AUTH_USER_MODEL, verbose_name='Aprovado por')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planos_contingencia', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planos_contingencia', to='app_eventos.evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Plano de Contingência',
                'verbose_name_plural': 'Planos de Contingência',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='PrevisaoDemanda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('participantes', 'Participantes'), ('equipamentos', 'Equipamentos'), ('insumos', 'Insumos'), ('pessoal', 'Pessoal'), ('receita', 'Receita'), ('custo', 'Custo')], max_length=20, verbose_name='Tipo')),
                ('modelo_ia', models.CharField(max_length=100, verbose_name='Modelo de IA')),
                ('dados_entrada', models.JSONField(verbose_name='Dados de Entrada')),
                ('resultado_previsao', models.JSONField(verbose_name='Resultado da Previsão')),
                ('confiabilidade', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Confiabilidade (%)')),
                ('status', models.CharField(choices=[('processando', 'Processando'), ('concluida', 'Concluída'), ('erro', 'Erro'), ('cancelada', 'Cancelada')], default='processando', max_length=20, verbose_name='Status')),
                ('data_previsao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Previsão')),
                ('data_validade', models.DateTimeField(verbose_name='Data de Validade')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='previsoes_demanda', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previsoes_demanda', to='app_eventos.evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Previsão de Demanda',
                'verbose_name_plural': 'Previsões de Demanda',
                'ordering': ['-data_previsao'],
            },
        ),
        migrations.CreateModel(
            name='QRCodeEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_qr', models.CharField(max_length=100, unique=True, verbose_name='Código QR')),
                ('url_qr', models.URLField(verbose_name='URL do QR Code')),
                ('data_geracao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Geração')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('total_scans', models.PositiveIntegerField(default=0, verbose_name='Total de Scans')),
                ('ultimo_scan', models.DateTimeField(blank=True, null=True, verbose_name='Último Scan')),
                ('equipamento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qr_code', to='app_eventos.equipamento', verbose_name='Equipamento')),
            ],
            options={
                'verbose_name': 'QR Code de Equipamento',
                'verbose_name_plural': 'QR Codes de Equipamentos',
            },
        ),
        migrations.CreateModel(
            name='RecomendacaoInteligente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('melhoria_processo', 'Melhoria de Processo'), ('reducao_custo', 'Redução de Custo'), ('aumento_qualidade', 'Aumento de Qualidade'), ('otimizacao_tempo', 'Otimização de Tempo'), ('gestao_risco', 'Gestão de Risco'), ('outro', 'Outro')], max_length=30, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('justificativa', models.TextField(verbose_name='Justificativa')),
                ('impacto_estimado', models.JSONField(verbose_name='Impacto Estimado')),
                ('acoes_sugeridas', models.JSONField(verbose_name='Ações Sugeridas')),
                ('algoritmo_ia', models.CharField(max_length=100, verbose_name='Algoritmo de IA')),
                ('confiabilidade', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Confiabilidade (%)')),
                ('status', models.CharField(choices=[('gerada', 'Gerada'), ('visualizada', 'Visualizada'), ('aplicada', 'Aplicada'), ('rejeitada', 'Rejeitada')], default='gerada', max_length=20, verbose_name='Status')),
                ('data_geracao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Geração')),
                ('data_visualizacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Visualização')),
                ('data_aplicacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Aplicação')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recomendacoes_recebidas', to=settings.AUTH_USER_MODEL, verbose_name='Destinatário')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recomendacoes_inteligentes', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recomendacoes_inteligentes', to='app_eventos.evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Recomendação Inteligente',
                'verbose_name_plural': 'Recomendações Inteligentes',
                'ordering': ['-data_geracao'],
            },
        ),
        migrations.CreateModel(
            name='RedeFornecedores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('suspenso', 'Suspenso'), ('verificando', 'Verificando')], default='verificando', max_length=20, verbose_name='Status')),
                ('categoria', models.CharField(choices=[('premium', 'Premium'), ('gold', 'Gold'), ('silver', 'Silver'), ('bronze', 'Bronze')], default='bronze', max_length=20, verbose_name='Categoria')),
                ('perfil_publico', models.JSONField(default=dict, verbose_name='Perfil Público')),
                ('certificacoes', models.JSONField(default=list, verbose_name='Certificações')),
                ('portfolio', models.JSONField(default=list, verbose_name='Portfolio')),
                ('avaliacao_media', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Avaliação Média')),
                ('total_avaliacoes', models.PositiveIntegerField(default=0, verbose_name='Total de Avaliações')),
                ('projetos_concluidos', models.PositiveIntegerField(default=0, verbose_name='Projetos Concluídos')),
                ('taxa_sucesso', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taxa de Sucesso (%)')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Última Atualização')),
                ('fornecedor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rede', to='app_eventos.fornecedor', verbose_name='Fornecedor')),
            ],
            options={
                'verbose_name': 'Rede de Fornecedor',
                'verbose_name_plural': 'Rede de Fornecedores',
            },
        ),
        migrations.CreateModel(
            name='RegraNegocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Regra')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('validacao', 'Validação'), ('calculo', 'Cálculo'), ('notificacao', 'Notificação'), ('aprovacao', 'Aprovação'), ('integracao', 'Integração')], max_length=20, verbose_name='Tipo')),
                ('condicao', models.TextField(verbose_name='Condição')),
                ('acao', models.TextField(verbose_name='Ação')),
                ('prioridade', models.PositiveIntegerField(default=1, verbose_name='Prioridade')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regras_negocio_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regras_negocio', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Regra de Negócio',
                'verbose_name_plural': 'Regras de Negócio',
                'ordering': ['prioridade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='RelatorioAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Relatório')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('financeiro', 'Financeiro'), ('operacional', 'Operacional'), ('qualidade', 'Qualidade'), ('comparativo', 'Comparativo'), ('tendencia', 'Tendência'), ('customizado', 'Customizado')], max_length=20, verbose_name='Tipo')),
                ('periodicidade', models.CharField(choices=[('diario', 'Diário'), ('semanal', 'Semanal'), ('mensal', 'Mensal'), ('trimestral', 'Trimestral'), ('anual', 'Anual'), ('sob_demanda', 'Sob Demanda')], max_length=20, verbose_name='Periodicidade')),
                ('template_relatorio', models.TextField(verbose_name='Template do Relatório')),
                ('parametros', models.JSONField(blank=True, default=dict, verbose_name='Parâmetros')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('ultima_execucao', models.DateTimeField(blank=True, null=True, verbose_name='Última Execução')),
                ('proxima_execucao', models.DateTimeField(blank=True, null=True, verbose_name='Próxima Execução')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_analytics', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Relatório de Analytics',
                'verbose_name_plural': 'Relatórios de Analytics',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='RiscoEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título do Risco')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('operacional', 'Operacional'), ('financeiro', 'Financeiro'), ('seguranca', 'Segurança'), ('ambiental', 'Ambiental'), ('legal', 'Legal'), ('reputacional', 'Reputacional'), ('tecnologico', 'Tecnológico'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo')),
                ('nivel', models.CharField(choices=[('baixo', 'Baixo'), ('medio', 'Médio'), ('alto', 'Alto'), ('critico', 'Crítico')], max_length=20, verbose_name='Nível')),
                ('probabilidade', models.PositiveIntegerField(verbose_name='Probabilidade (1-5)')),
                ('impacto', models.PositiveIntegerField(verbose_name='Impacto (1-5)')),
                ('status', models.CharField(choices=[('identificado', 'Identificado'), ('avaliado', 'Avaliado'), ('mitigado', 'Mitigado'), ('monitorado', 'Monitorado'), ('resolvido', 'Resolvido'), ('cancelado', 'Cancelado')], default='identificado', max_length=20, verbose_name='Status')),
                ('acoes_mitigacao', models.TextField(verbose_name='Ações de Mitigação')),
                ('plano_contingencia', models.TextField(blank=True, null=True, verbose_name='Plano de Contingência')),
                ('data_identificacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Identificação')),
                ('data_avaliacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Avaliação')),
                ('data_resolucao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Resolução')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='riscos_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riscos', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riscos_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Risco de Evento',
                'verbose_name_plural': 'Riscos de Eventos',
                'ordering': ['-data_identificacao'],
            },
        ),
        migrations.CreateModel(
            name='ScanQRCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_scan', models.CharField(choices=[('checkin', 'Check-in'), ('checkout', 'Check-out'), ('manutencao', 'Manutenção'), ('inventario', 'Inventário'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo de Scan')),
                ('localizacao', models.JSONField(blank=True, null=True, verbose_name='Localização')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('data_scan', models.DateTimeField(auto_now_add=True, verbose_name='Data do Scan')),
                ('qr_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='app_eventos.qrcodeequipamento', verbose_name='QR Code')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans_qr_code', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Scan QR Code',
                'verbose_name_plural': 'Scans QR Code',
                'ordering': ['-data_scan'],
            },
        ),
        migrations.CreateModel(
            name='SeguroEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('responsabilidade_civil', 'Responsabilidade Civil'), ('equipamentos', 'Equipamentos'), ('pessoas', 'Pessoas'), ('evento_cancelamento', 'Cancelamento de Evento'), ('outro', 'Outro')], max_length=30, verbose_name='Tipo')),
                ('seguradora', models.CharField(max_length=200, verbose_name='Seguradora')),
                ('numero_apolice', models.CharField(max_length=100, verbose_name='Número da Apólice')),
                ('valor_segurado', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Segurado')),
                ('valor_premio', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor do Prêmio')),
                ('franquia', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Franquia')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('status', models.CharField(choices=[('cotacao', 'Cotação'), ('aprovado', 'Aprovado'), ('ativo', 'Ativo'), ('vencido', 'Vencido'), ('cancelado', 'Cancelado')], default='cotacao', max_length=20, verbose_name='Status')),
                ('coberturas', models.JSONField(default=list, verbose_name='Coberturas')),
                ('exclusoes', models.JSONField(default=list, verbose_name='Exclusões')),
                ('contato_seguradora', models.JSONField(default=dict, verbose_name='Contato da Seguradora')),
                ('arquivo_apolice', models.FileField(blank=True, null=True, upload_to='seguros/', verbose_name='Arquivo da Apólice')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seguros_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguros', to='app_eventos.evento', verbose_name='Evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguros_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Seguro de Evento',
                'verbose_name_plural': 'Seguros de Eventos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Workflow')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('pausado', 'Pausado')], default='ativo', max_length=20, verbose_name='Status')),
                ('trigger_evento', models.CharField(max_length=100, verbose_name='Evento Disparador')),
                ('acoes_automaticas', models.JSONField(default=list, verbose_name='Ações Automáticas')),
                ('condicoes_execucao', models.JSONField(default=dict, verbose_name='Condições de Execução')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('ultima_execucao', models.DateTimeField(blank=True, null=True, verbose_name='Última Execução')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflows_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Workflow de Evento',
                'verbose_name_plural': 'Workflows de Eventos',
                'ordering': ['nome'],
            },
        ),
    ]
