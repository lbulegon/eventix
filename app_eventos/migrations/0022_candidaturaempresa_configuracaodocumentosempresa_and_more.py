# Generated by Django 5.1.5 on 2025-10-02 15:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_eventos', '0021_alter_funcao_options_funcao_disponivel_para_vagas_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CandidaturaEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carta_apresentacao', models.TextField(blank=True, null=True, verbose_name='Carta de Apresentação')),
                ('experiencia_relacionada', models.TextField(blank=True, null=True, verbose_name='Experiência Relacionada')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovada', 'Aprovada'), ('rejeitada', 'Rejeitada'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_candidatura', models.DateTimeField(auto_now_add=True, verbose_name='Data da Candidatura')),
                ('data_avaliacao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Avaliação')),
                ('observacoes_empresa', models.TextField(blank=True, null=True, verbose_name='Observações da Empresa')),
            ],
            options={
                'verbose_name': 'Candidatura da Empresa',
                'verbose_name_plural': 'Candidaturas da Empresa',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoDocumentosEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aceita_documentos_externos', models.BooleanField(default=True, help_text='Se aceita documentos de outras empresas', verbose_name='Aceita Documentos Externos')),
                ('periodo_validade_padrao', models.PositiveIntegerField(default=365, help_text='Período padrão de validade dos documentos em dias', verbose_name='Período de Validade Padrão (dias)')),
                ('rg_obrigatorio', models.BooleanField(default=True, verbose_name='RG Obrigatório')),
                ('cpf_obrigatorio', models.BooleanField(default=True, verbose_name='CPF Obrigatório')),
                ('ctps_obrigatorio', models.BooleanField(default=True, verbose_name='CTPS Obrigatório')),
                ('comprovante_residencia_obrigatorio', models.BooleanField(default=True, verbose_name='Comprovante de Residência Obrigatório')),
                ('certificado_reservista_obrigatorio', models.BooleanField(default=False, verbose_name='Certificado de Reservista Obrigatório')),
                ('comprovante_escolaridade_obrigatorio', models.BooleanField(default=False, verbose_name='Comprovante de Escolaridade Obrigatório')),
                ('certificado_profissional_obrigatorio', models.BooleanField(default=False, verbose_name='Certificado Profissional Obrigatório')),
                ('periodo_validade_rg', models.PositiveIntegerField(default=365, verbose_name='Validade RG (dias)')),
                ('periodo_validade_cpf', models.PositiveIntegerField(default=365, verbose_name='Validade CPF (dias)')),
                ('periodo_validade_ctps', models.PositiveIntegerField(default=365, verbose_name='Validade CTPS (dias)')),
                ('periodo_validade_residencia', models.PositiveIntegerField(default=90, verbose_name='Validade Residência (dias)')),
                ('periodo_validade_reservista', models.PositiveIntegerField(default=365, verbose_name='Validade Reservista (dias)')),
                ('periodo_validade_escolaridade', models.PositiveIntegerField(default=365, verbose_name='Validade Escolaridade (dias)')),
                ('periodo_validade_profissional', models.PositiveIntegerField(default=365, verbose_name='Validade Profissional (dias)')),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuracoes_documentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Configuração de Documentos da Empresa',
                'verbose_name_plural': 'Configurações de Documentos das Empresas',
            },
        ),
        migrations.CreateModel(
            name='ContratacaoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_contratacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Contratação')),
                ('status', models.CharField(choices=[('ativa', 'Ativa'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada'), ('suspensa', 'Suspensa')], default='ativa', max_length=20, verbose_name='Status da Contratação')),
                ('tem_vinculo_empregaticio', models.BooleanField(default=False, help_text='Se foi criado vínculo empregatício', verbose_name='Tem Vínculo Empregatício')),
                ('numero_contrato', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número do Contrato')),
                ('data_inicio_contrato', models.DateField(blank=True, null=True, verbose_name='Data de Início do Contrato')),
                ('data_fim_contrato', models.DateField(blank=True, null=True, verbose_name='Data de Fim do Contrato')),
                ('remuneracao_efetiva', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Remuneração Efetiva')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('candidatura', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contratacao', to='app_eventos.candidaturaempresa', verbose_name='Candidatura')),
                ('contratado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contratacoes_realizadas', to=settings.AUTH_USER_MODEL, verbose_name='Contratado por')),
            ],
            options={
                'verbose_name': 'Contratação da Empresa',
                'verbose_name_plural': 'Contratações da Empresa',
            },
        ),
        migrations.CreateModel(
            name='FreelancerGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perfil_publico', models.BooleanField(default=True, help_text='Se o perfil é visível no marketplace', verbose_name='Perfil Público')),
                ('disponivel_para_vagas', models.BooleanField(default=True, help_text='Se está disponível para receber vagas', verbose_name='Disponível para Vagas')),
                ('avaliacao_global', models.DecimalField(decimal_places=2, default=0.0, help_text='Avaliação média de todas as empresas', max_digits=3, verbose_name='Avaliação Global')),
                ('total_avaliacoes', models.PositiveIntegerField(default=0, verbose_name='Total de Avaliações')),
                ('total_eventos', models.PositiveIntegerField(default=0, verbose_name='Total de Eventos')),
                ('nivel_confiabilidade', models.CharField(choices=[('alta', 'Alta'), ('media', 'Média'), ('baixa', 'Baixa')], default='media', max_length=20, verbose_name='Nível de Confiabilidade')),
                ('verificado', models.BooleanField(default=False, help_text='Se o perfil foi verificado pelo sistema', verbose_name='Verificado')),
                ('telefone_publico', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Público')),
                ('email_publico', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Público')),
                ('website_pessoal', models.URLField(blank=True, null=True, verbose_name='Website Pessoal')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='freelancer_global', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Freelancer Global',
                'verbose_name_plural': 'Freelancers Globais',
            },
        ),
        migrations.CreateModel(
            name='DocumentoFreelancerEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('rg', 'RG'), ('cpf', 'CPF'), ('ctps', 'Carteira de Trabalho'), ('comprovante_residencia', 'Comprovante de Residência'), ('certificado_reservista', 'Certificado de Reservista'), ('comprovante_escolaridade', 'Comprovante de Escolaridade'), ('certificado_profissional', 'Certificado Profissional'), ('outros', 'Outros')], max_length=30, verbose_name='Tipo de Documento')),
                ('arquivo', models.FileField(upload_to='documentos_freelancers_empresas/%Y/%m/%d/', verbose_name='Arquivo do Documento')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('expirado', 'Expirado')], default='pendente', max_length=20, verbose_name='Status do Documento')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data do Upload')),
                ('data_vencimento', models.DateTimeField(blank=True, help_text='Data de vencimento do documento', null=True, verbose_name='Data de Vencimento')),
                ('data_validacao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Validação')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('pode_reutilizar', models.BooleanField(default=True, help_text='Se este documento pode ser reutilizado em outras vagas', verbose_name='Pode Reutilizar')),
                ('total_reutilizacoes', models.PositiveIntegerField(default=0, verbose_name='Total de Reutilizações')),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_freelancers', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('validado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos_validados_empresa', to=settings.AUTH_USER_MODEL, verbose_name='Validado por')),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_empresas', to='app_eventos.freelancerglobal', verbose_name='Freelancer')),
            ],
            options={
                'verbose_name': 'Documento do Freelancer por Empresa',
                'verbose_name_plural': 'Documentos dos Freelancers por Empresa',
                'unique_together': {('empresa_contratante', 'freelancer', 'tipo_documento')},
            },
        ),
        migrations.AddField(
            model_name='candidaturaempresa',
            name='freelancer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='app_eventos.freelancerglobal', verbose_name='Freelancer'),
        ),
        migrations.CreateModel(
            name='VagaEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título da Vaga')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('exige_vinculo_empregaticio', models.BooleanField(default=False, help_text='Se esta vaga exige contrato temporário de trabalho', verbose_name='Exige Vínculo Empregatício')),
                ('tipo_vinculo', models.CharField(blank=True, choices=[('temporario', 'Contrato Temporário'), ('intermitente', 'Contrato Intermitente'), ('terceirizado', 'Terceirizado')], help_text='Tipo de vínculo empregatício exigido', max_length=20, null=True, verbose_name='Tipo de Vínculo')),
                ('experiencia_minima', models.CharField(choices=[('iniciante', 'Iniciante'), ('intermediario', 'Intermediário'), ('avancado', 'Avançado'), ('especialista', 'Especialista')], default='iniciante', max_length=20, verbose_name='Experiência Mínima')),
                ('remuneracao', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor da Remuneração')),
                ('tipo_remuneracao', models.CharField(choices=[('por_hora', 'Por Hora'), ('por_dia', 'Por Dia'), ('por_evento', 'Por Evento'), ('fixo', 'Valor Fixo')], default='por_evento', max_length=20, verbose_name='Tipo de Remuneração')),
                ('quantidade_vagas', models.PositiveIntegerField(verbose_name='Quantidade de Vagas')),
                ('quantidade_preenchida', models.PositiveIntegerField(default=0, verbose_name='Vagas Preenchidas')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de Fim')),
                ('data_limite_candidatura', models.DateTimeField(verbose_name='Data Limite para Candidatura')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('publicada', models.BooleanField(default=False, verbose_name='Publicada')),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas_empresa', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Vaga da Empresa',
                'verbose_name_plural': 'Vagas da Empresa',
            },
        ),
        migrations.AddField(
            model_name='candidaturaempresa',
            name='vaga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='app_eventos.vagaempresa', verbose_name='Vaga'),
        ),
        migrations.CreateModel(
            name='DocumentoFreelancer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('rg', 'RG'), ('cpf', 'CPF'), ('ctps', 'Carteira de Trabalho'), ('comprovante_residencia', 'Comprovante de Residência'), ('certificado_reservista', 'Certificado de Reservista'), ('comprovante_escolaridade', 'Comprovante de Escolaridade'), ('certificado_profissional', 'Certificado Profissional'), ('outros', 'Outros')], max_length=30, verbose_name='Tipo de Documento')),
                ('arquivo', models.FileField(upload_to='documentos_freelancers/%Y/%m/%d/', verbose_name='Arquivo do Documento')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('expirado', 'Expirado')], default='pendente', max_length=20, verbose_name='Status do Documento')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data do Upload')),
                ('data_validacao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Validação')),
                ('candidatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='app_eventos.candidaturaempresa', verbose_name='Candidatura')),
                ('validado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos_validados', to=settings.AUTH_USER_MODEL, verbose_name='Validado por')),
            ],
            options={
                'verbose_name': 'Documento do Freelancer',
                'verbose_name_plural': 'Documentos dos Freelancers',
                'unique_together': {('candidatura', 'tipo_documento')},
            },
        ),
        migrations.CreateModel(
            name='ReutilizacaoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_reutilizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Reutilização')),
                ('status_na_reutilizacao', models.CharField(choices=[('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('pendente', 'Pendente')], default='aprovado', max_length=20, verbose_name='Status na Reutilização')),
                ('candidatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_reutilizados', to='app_eventos.candidaturaempresa', verbose_name='Candidatura')),
                ('documento_original', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reutilizacoes', to='app_eventos.documentofreelancerempresa', verbose_name='Documento Original')),
                ('vaga_utilizada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_reutilizados', to='app_eventos.vagaempresa', verbose_name='Vaga Utilizada')),
            ],
            options={
                'verbose_name': 'Reutilização de Documento',
                'verbose_name_plural': 'Reutilizações de Documentos',
                'unique_together': {('documento_original', 'candidatura')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='candidaturaempresa',
            unique_together={('vaga', 'freelancer')},
        ),
    ]
