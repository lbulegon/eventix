# Generated by Django 5.1.5 on 2025-09-29 16:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_eventos', '0020_add_comissao_eventix'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='funcao',
            options={'verbose_name': 'Função', 'verbose_name_plural': 'Funções'},
        ),
        migrations.AddField(
            model_name='funcao',
            name='disponivel_para_vagas',
            field=models.BooleanField(default=True, help_text='Se esta função pode ser usada para criar vagas', verbose_name='Disponível para Criação de Vagas'),
        ),
        migrations.AddField(
            model_name='funcao',
            name='empresa_contratante',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='funcoes', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante'),
        ),
        migrations.AddField(
            model_name='funcao',
            name='valor_base_por_vaga',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Valor base para cobrança por vaga desta função', max_digits=10, null=True, verbose_name='Valor Base por Vaga'),
        ),
        migrations.AddField(
            model_name='tipofuncao',
            name='empresa_contratante',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='tipos_funcao', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por'),
        ),
        migrations.AlterField(
            model_name='funcao',
            name='tipo_funcao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcoes', to='app_eventos.tipofuncao', verbose_name='Tipo de Função'),
        ),
        migrations.AlterField(
            model_name='tipofuncao',
            name='nome',
            field=models.CharField(max_length=80),
        ),
        migrations.AlterUniqueTogether(
            name='funcao',
            unique_together={('empresa_contratante', 'nome')},
        ),
        migrations.AlterUniqueTogether(
            name='tipofuncao',
            unique_together={('empresa_contratante', 'nome')},
        ),
        migrations.CreateModel(
            name='BackupGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Backup')),
                ('tipo', models.CharField(choices=[('completo', 'Completo'), ('incremental', 'Incremental'), ('diferencial', 'Diferencial')], max_length=20, verbose_name='Tipo de Backup')),
                ('tamanho', models.BigIntegerField(verbose_name='Tamanho (bytes)')),
                ('localizacao', models.CharField(max_length=500, verbose_name='Localização')),
                ('status', models.CharField(choices=[('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('falhou', 'Falhou')], default='em_andamento', max_length=20, verbose_name='Status')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(blank=True, null=True, verbose_name='Data de Fim')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Backup Global',
                'verbose_name_plural': 'Backups Globais',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaFreelancerGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('icone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ícone')),
                ('cor', models.CharField(blank=True, max_length=7, null=True, verbose_name='Cor (HEX)')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Categoria de Freelancer Global',
                'verbose_name_plural': 'Categorias de Freelancer Globais',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('icone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ícone')),
                ('cor', models.CharField(blank=True, max_length=7, null=True, verbose_name='Cor (HEX)')),
                ('ordem', models.PositiveIntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Categoria Global',
                'verbose_name_plural': 'Categorias Globais',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('chave', models.CharField(max_length=100, unique=True, verbose_name='Chave')),
                ('valor', models.TextField(verbose_name='Valor')),
                ('tipo', models.CharField(choices=[('string', 'Texto'), ('integer', 'Número Inteiro'), ('float', 'Número Decimal'), ('boolean', 'Verdadeiro/Falso'), ('json', 'JSON')], default='string', max_length=20, verbose_name='Tipo de Dado')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('categoria', models.CharField(max_length=50, verbose_name='Categoria')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Configuração do Sistema',
                'verbose_name_plural': 'Configurações do Sistema',
                'ordering': ['categoria', 'chave'],
            },
        ),
        migrations.CreateModel(
            name='FornecedorGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('endereco', models.TextField(blank=True, null=True, verbose_name='Endereço')),
                ('categoria', models.CharField(max_length=100, verbose_name='Categoria')),
                ('avaliacao_media', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='Avaliação Média')),
                ('total_avaliacoes', models.PositiveIntegerField(default=0, verbose_name='Total de Avaliações')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Fornecedor Global',
                'verbose_name_plural': 'Fornecedores Globais',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='GrupoPermissaoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Grupo')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('pode_gerenciar_usuarios', models.BooleanField(default=False, help_text='Pode criar, editar e remover usuários da empresa', verbose_name='Pode Gerenciar Usuários')),
                ('pode_gerenciar_eventos', models.BooleanField(default=True, help_text='Pode criar, editar e gerenciar eventos', verbose_name='Pode Gerenciar Eventos')),
                ('pode_gerenciar_freelancers', models.BooleanField(default=True, help_text='Pode gerenciar freelancers e candidaturas', verbose_name='Pode Gerenciar Freelancers')),
                ('pode_gerenciar_equipamentos', models.BooleanField(default=True, help_text='Pode gerenciar equipamentos e manutenções', verbose_name='Pode Gerenciar Equipamentos')),
                ('pode_gerenciar_estoque', models.BooleanField(default=True, help_text='Pode gerenciar insumos e estoque', verbose_name='Pode Gerenciar Estoque')),
                ('pode_gerenciar_financeiro', models.BooleanField(default=False, help_text='Pode acessar relatórios financeiros e pagamentos', verbose_name='Pode Gerenciar Financeiro')),
                ('pode_gerenciar_relatorios', models.BooleanField(default=True, help_text='Pode gerar relatórios e estatísticas', verbose_name='Pode Gerar Relatórios')),
                ('pode_configurar_sistema', models.BooleanField(default=False, help_text='Pode alterar configurações da empresa', verbose_name='Pode Configurar Sistema')),
                ('pode_ver_todos_eventos', models.BooleanField(default=True, help_text='Pode visualizar todos os eventos da empresa', verbose_name='Pode Ver Todos os Eventos')),
                ('pode_editar_todos_eventos', models.BooleanField(default=True, help_text='Pode editar todos os eventos da empresa', verbose_name='Pode Editar Todos os Eventos')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('empresa_contratante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupos_permissao', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Grupo de Permissão',
                'verbose_name_plural': 'Grupos de Permissão',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='grupo_permissao',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='app_eventos.grupopermissaoempresa', verbose_name='Grupo de Permissão'),
        ),
        migrations.CreateModel(
            name='IntegracaoGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('api', 'API REST'), ('webhook', 'Webhook'), ('sftp', 'SFTP'), ('email', 'Email'), ('sms', 'SMS'), ('payment', 'Pagamento')], max_length=20, verbose_name='Tipo de Integração')),
                ('url_base', models.URLField(blank=True, null=True, verbose_name='URL Base')),
                ('documentacao', models.URLField(blank=True, null=True, verbose_name='Documentação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Integração Global',
                'verbose_name_plural': 'Integrações Globais',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='LogSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nivel', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Informação'), ('WARNING', 'Aviso'), ('ERROR', 'Erro'), ('CRITICAL', 'Crítico')], max_length=10, verbose_name='Nível')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('modulo', models.CharField(max_length=100, verbose_name='Módulo')),
                ('funcao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Função')),
                ('linha', models.PositiveIntegerField(blank=True, null=True, verbose_name='Linha')),
                ('dados_extras', models.JSONField(blank=True, default=dict, verbose_name='Dados Extras')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Log do Sistema',
                'verbose_name_plural': 'Logs do Sistema',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='ParametroSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('valor_padrao', models.TextField(verbose_name='Valor Padrão')),
                ('valor_atual', models.TextField(verbose_name='Valor Atual')),
                ('tipo', models.CharField(choices=[('string', 'Texto'), ('integer', 'Número Inteiro'), ('float', 'Número Decimal'), ('boolean', 'Verdadeiro/Falso'), ('json', 'JSON')], default='string', max_length=20, verbose_name='Tipo de Dado')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('categoria', models.CharField(max_length=50, verbose_name='Categoria')),
                ('editavel', models.BooleanField(default=True, verbose_name='Editável')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Parâmetro do Sistema',
                'verbose_name_plural': 'Parâmetros do Sistema',
                'ordering': ['categoria', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ClassificacaoGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('tipo', models.CharField(max_length=50, verbose_name='Tipo de Classificação')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('valor', models.IntegerField(default=0, verbose_name='Valor/Ordem')),
                ('cor', models.CharField(blank=True, max_length=7, null=True, verbose_name='Cor (HEX)')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Classificação Global',
                'verbose_name_plural': 'Classificações Globais',
                'ordering': ['tipo', 'valor', 'nome'],
                'unique_together': {('tipo', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='HabilidadeGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('nivel_minimo', models.CharField(choices=[('iniciante', 'Iniciante'), ('intermediario', 'Intermediário'), ('avancado', 'Avançado'), ('especialista', 'Especialista')], default='iniciante', max_length=20, verbose_name='Nível Mínimo')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habilidades', to='app_eventos.categoriafreelancerglobal', verbose_name='Categoria')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Habilidade Global',
                'verbose_name_plural': 'Habilidades Globais',
                'ordering': ['categoria', 'nome'],
                'unique_together': {('categoria', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='TemplateGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('email', 'Email'), ('documento', 'Documento'), ('notificacao', 'Notificação'), ('relatorio', 'Relatório'), ('contrato', 'Contrato')], max_length=20, verbose_name='Tipo de Template')),
                ('assunto', models.CharField(blank=True, max_length=200, null=True, verbose_name='Assunto')),
                ('conteudo', models.TextField(verbose_name='Conteúdo')),
                ('variaveis', models.JSONField(blank=True, default=list, verbose_name='Variáveis Disponíveis')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Template Global',
                'verbose_name_plural': 'Templates Globais',
                'ordering': ['tipo', 'nome'],
                'unique_together': {('nome', 'tipo')},
            },
        ),
        migrations.CreateModel(
            name='TipoGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('codigo', models.CharField(blank=True, max_length=20, null=True, verbose_name='Código')),
                ('ordem', models.PositiveIntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipos', to='app_eventos.categoriaglobal', verbose_name='Categoria')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Tipo Global',
                'verbose_name_plural': 'Tipos Globais',
                'ordering': ['categoria', 'ordem', 'nome'],
                'unique_together': {('categoria', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='WebhookGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('evento', models.CharField(max_length=100, verbose_name='Evento')),
                ('url', models.URLField(verbose_name='URL do Webhook')),
                ('metodo', models.CharField(choices=[('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH')], default='POST', max_length=10, verbose_name='Método HTTP')),
                ('headers', models.JSONField(blank=True, default=dict, verbose_name='Headers')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_por', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'admin_sistema'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('integracao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='app_eventos.integracaoglobal', verbose_name='Integração')),
            ],
            options={
                'verbose_name': 'Webhook Global',
                'verbose_name_plural': 'Webhooks Globais',
                'ordering': ['integracao', 'evento'],
                'unique_together': {('integracao', 'evento')},
            },
        ),
    ]
