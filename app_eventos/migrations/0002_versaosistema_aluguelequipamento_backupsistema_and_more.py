# Generated by Django 5.2.3 on 2025-08-18 06:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_eventos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VersaoSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_versao', models.CharField(max_length=20, unique=True)),
                ('nome_versao', models.CharField(max_length=100)),
                ('data_lancamento', models.DateField()),
                ('descricao', models.TextField()),
                ('mudancas', models.JSONField(default=list)),
                ('ativo', models.BooleanField(default=True)),
                ('obrigatorio', models.BooleanField(default=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Versão do Sistema',
                'verbose_name_plural': 'Versões do Sistema',
                'ordering': ['-data_lancamento'],
            },
        ),
        migrations.CreateModel(
            name='AluguelEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField()),
                ('valor_diario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('data_devolucao', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('solicitado', 'Solicitado'), ('aprovado', 'Aprovado'), ('em_uso', 'Em Uso'), ('devolvido', 'Devolvido'), ('cancelado', 'Cancelado')], default='solicitado', max_length=20)),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alugueis_equipamentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alugueis', to='app_eventos.equipamento')),
                ('fornecedor_aluguel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos_alugados', to='app_eventos.empresa')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alugueis_solicitados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Aluguel de Equipamento',
                'verbose_name_plural': 'Aluguéis de Equipamentos',
            },
        ),
        migrations.CreateModel(
            name='BackupSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_backup', models.CharField(choices=[('completo', 'Completo'), ('incremental', 'Incremental'), ('diferencial', 'Diferencial')], max_length=20)),
                ('arquivo_backup', models.FileField(upload_to='backups/')),
                ('tamanho_arquivo', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('falha', 'Falha')], default='em_andamento', max_length=20)),
                ('data_inicio', models.DateTimeField(auto_now_add=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Backup do Sistema',
                'verbose_name_plural': 'Backups do Sistema',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='CanalComunicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('tipo', models.CharField(choices=[('email', 'E-mail'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('push', 'Push Notification'), ('interno', 'Sistema Interno')], max_length=20)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='canais_comunicacao', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Canal de Comunicação',
                'verbose_name_plural': 'Canais de Comunicação',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='CategoriaInsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categorias_insumos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Categoria de Insumo',
                'verbose_name_plural': 'Categorias de Insumos',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='ChecklistEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('data_limite', models.DateTimeField(blank=True, null=True)),
                ('concluido', models.BooleanField(default=False)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklists_eventos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklists', to='app_eventos.evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklists_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Checklist de Evento',
                'verbose_name_plural': 'Checklists de Eventos',
            },
        ),
        migrations.CreateModel(
            name='DashboardEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_equipamentos', models.PositiveIntegerField(default=0)),
                ('equipamentos_disponiveis', models.PositiveIntegerField(default=0)),
                ('equipamentos_manutencao', models.PositiveIntegerField(default=0)),
                ('equipamentos_alugados', models.PositiveIntegerField(default=0)),
                ('total_insumos', models.PositiveIntegerField(default=0)),
                ('insumos_estoque_baixo', models.PositiveIntegerField(default=0)),
                ('insumos_vencendo', models.PositiveIntegerField(default=0)),
                ('rotas_transporte_ativas', models.PositiveIntegerField(default=0)),
                ('veiculos_disponiveis', models.PositiveIntegerField(default=0)),
                ('pedidos_compra_pendentes', models.PositiveIntegerField(default=0)),
                ('alugueis_ativos', models.PositiveIntegerField(default=0)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('empresa_contratante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_estoque', to='app_eventos.empresacontratante')),
            ],
            options={
                'verbose_name': 'Dashboard de Estoque',
                'verbose_name_plural': 'Dashboards de Estoque',
            },
        ),
        migrations.CreateModel(
            name='Insumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código do Insumo')),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('especificacoes', models.TextField(blank=True, null=True)),
                ('unidade_medida', models.CharField(choices=[('unidade', 'Unidade'), ('kg', 'Quilograma'), ('l', 'Litro'), ('m', 'Metro'), ('m2', 'Metro Quadrado'), ('m3', 'Metro Cúbico'), ('caixa', 'Caixa'), ('pacote', 'Pacote'), ('fardo', 'Fardo'), ('outro', 'Outro')], default='unidade', max_length=20)),
                ('preco_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estoque_minimo', models.PositiveIntegerField(default=0, verbose_name='Estoque Mínimo')),
                ('estoque_atual', models.PositiveIntegerField(default=0, verbose_name='Estoque Atual')),
                ('local_armazenamento', models.CharField(blank=True, max_length=200, null=True)),
                ('data_validade', models.DateField(blank=True, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='insumos/fotos/')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insumos', to='app_eventos.categoriainsumo')),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insumos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('empresa_fornecedora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insumos_fornecidos', to='app_eventos.empresa', verbose_name='Empresa Fornecedora')),
            ],
            options={
                'verbose_name': 'Insumo',
                'verbose_name_plural': 'Insumos',
            },
        ),
        migrations.CreateModel(
            name='InsumoEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_total_necessaria', models.PositiveIntegerField(default=0, verbose_name='Quantidade Total Necessária')),
                ('quantidade_alocada_evento', models.PositiveIntegerField(default=0, verbose_name='Quantidade Alocada para o Evento')),
                ('quantidade_distribuida_setores', models.PositiveIntegerField(default=0, verbose_name='Quantidade Distribuída pelos Setores')),
                ('quantidade_utilizada_evento', models.PositiveIntegerField(default=0, verbose_name='Quantidade Utilizada no Evento')),
                ('data_alocacao', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('alocado', 'Alocado'), ('em_distribuicao', 'Em Distribuição'), ('distribuido', 'Distribuído'), ('em_uso', 'Em Uso'), ('finalizado', 'Finalizado'), ('insuficiente', 'Insufficiente')], default='pendente', max_length=20)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insumos_evento', to='app_eventos.evento')),
                ('insumo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos_utilizacao', to='app_eventos.insumo')),
                ('responsavel_alocacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insumos_alocados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Insumo do Evento',
                'verbose_name_plural': 'Insumos do Evento',
                'unique_together': {('evento', 'insumo')},
            },
        ),
        migrations.CreateModel(
            name='IntegracaoAPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('tipo_integracao', models.CharField(choices=[('pagamento', 'Pagamento'), ('email', 'E-mail'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('calendario', 'Calendário'), ('outro', 'Outro')], max_length=20)),
                ('url_base', models.URLField()),
                ('api_key', models.CharField(blank=True, max_length=500, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=500, null=True)),
                ('configuracoes', models.JSONField(default=dict)),
                ('ativo', models.BooleanField(default=True)),
                ('ultima_sincronizacao', models.DateTimeField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='integracoes_api', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Integração de API',
                'verbose_name_plural': 'Integrações de API',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='ItemChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=500)),
                ('ordem', models.PositiveIntegerField(default=0)),
                ('concluido', models.BooleanField(default=False)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='app_eventos.checklistevento')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itens_checklist_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Item do Checklist',
                'verbose_name_plural': 'Itens do Checklist',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='LogIntegracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('sucesso', 'Sucesso'), ('erro', 'Erro'), ('pendente', 'Pendente')], max_length=20)),
                ('dados_enviados', models.JSONField(default=dict)),
                ('resposta_recebida', models.JSONField(default=dict)),
                ('erro', models.TextField(blank=True, null=True)),
                ('tempo_resposta', models.FloatField(blank=True, null=True)),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('integracao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='app_eventos.integracaoapi')),
            ],
            options={
                'verbose_name': 'Log de Integração',
                'verbose_name_plural': 'Logs de Integração',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assunto', models.CharField(max_length=200)),
                ('conteudo', models.TextField()),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20)),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('enviada', 'Enviada'), ('entregue', 'Entregue'), ('lida', 'Lida'), ('falha', 'Falha no Envio')], default='rascunho', max_length=20)),
                ('data_envio', models.DateTimeField(blank=True, null=True)),
                ('data_leitura', models.DateTimeField(blank=True, null=True)),
                ('anexos', models.FileField(blank=True, null=True, upload_to='mensagens/anexos/')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('canal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens', to='app_eventos.canalcomunicacao')),
                ('destinatarios', models.ManyToManyField(related_name='mensagens_recebidas', to=settings.AUTH_USER_MODEL)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mensagens', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('remetente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_enviadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='PedidoCompraEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_pedido', models.CharField(max_length=50, unique=True)),
                ('quantidade', models.PositiveIntegerField()),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('data_pedido', models.DateField(auto_now_add=True)),
                ('data_entrega_prevista', models.DateField()),
                ('data_entrega_real', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('enviado', 'Enviado'), ('aprovado', 'Aprovado'), ('em_producao', 'Em Produção'), ('pronto_envio', 'Pronto para Envio'), ('enviado', 'Enviado'), ('recebido', 'Recebido'), ('cancelado', 'Cancelado')], default='rascunho', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_compra_aprovados', to=settings.AUTH_USER_MODEL)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_compra_equipamentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_compra', to='app_eventos.equipamento')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_fornecidos', to='app_eventos.empresa')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_compra_solicitados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pedido de Compra de Equipamento',
                'verbose_name_plural': 'Pedidos de Compra de Equipamentos',
            },
        ),
        migrations.CreateModel(
            name='RelatorioEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_relatorio', models.CharField(choices=[('estoque_geral', 'Estoque Geral'), ('estoque_baixo', 'Estoque Baixo'), ('validade', 'Controle de Validade'), ('transporte', 'Relatório de Transporte'), ('equipamentos', 'Status de Equipamentos'), ('compras', 'Pedidos de Compra'), ('alugueis', 'Aluguéis')], max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('dados_relatorio', models.JSONField(default=dict)),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='relatorios/estoque/')),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_estoque', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_estoque', to='app_eventos.evento')),
                ('gerado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_estoque_gerados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relatório de Estoque',
                'verbose_name_plural': 'Relatórios de Estoque',
            },
        ),
        migrations.CreateModel(
            name='RotaTransporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_rota', models.CharField(max_length=200)),
                ('origem', models.CharField(max_length=200)),
                ('destino', models.CharField(max_length=200)),
                ('data_saida', models.DateTimeField()),
                ('data_chegada_prevista', models.DateTimeField()),
                ('data_chegada_real', models.DateTimeField(blank=True, null=True)),
                ('distancia_km', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('custo_combustivel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('custo_pedagio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('planejada', 'Planejada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='planejada', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rotas_transporte', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotas_transporte', to='app_eventos.evento')),
                ('motorista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotas_motorista', to='app_eventos.freelance')),
            ],
            options={
                'verbose_name': 'Rota de Transporte',
                'verbose_name_plural': 'Rotas de Transporte',
            },
        ),
        migrations.CreateModel(
            name='ItemTransporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_item', models.CharField(choices=[('equipamento', 'Equipamento'), ('insumo', 'Insumo'), ('outro', 'Outro')], max_length=20)),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('peso_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('volume_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('equipamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transportes', to='app_eventos.equipamento')),
                ('insumo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transportes', to='app_eventos.insumo')),
                ('setor_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_recebidos', to='app_eventos.setorevento')),
                ('rota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_transporte', to='app_eventos.rotatransporte')),
            ],
            options={
                'verbose_name': 'Item de Transporte',
                'verbose_name_plural': 'Itens de Transporte',
            },
        ),
        migrations.CreateModel(
            name='StatusEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('cor', models.CharField(default='#000000', help_text='Cor em hexadecimal', max_length=7)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='status_equipamentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Status de Equipamento',
                'verbose_name_plural': 'Status de Equipamentos',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Tarefa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='pendente', max_length=20)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_limite', models.DateTimeField(blank=True, null=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarefas_criadas', to=settings.AUTH_USER_MODEL)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tarefas', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('evento_relacionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tarefas', to='app_eventos.evento')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarefas_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tarefa',
                'verbose_name_plural': 'Tarefas',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='TemplateDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('tipo_documento', models.CharField(choices=[('contrato', 'Contrato'), ('termo_compromisso', 'Termo de Compromisso'), ('checklist', 'Checklist'), ('relatorio', 'Relatório'), ('email', 'E-mail'), ('sms', 'SMS'), ('outro', 'Outro')], max_length=20)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('conteudo', models.TextField()),
                ('variaveis', models.JSONField(default=dict, help_text='Variáveis disponíveis no template')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates_criados', to=settings.AUTH_USER_MODEL)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='templates_documentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Template de Documento',
                'verbose_name_plural': 'Templates de Documentos',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='DocumentoGerado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('conteudo', models.TextField()),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='documentos/gerados/')),
                ('variaveis_utilizadas', models.JSONField(default=dict)),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('evento_relacionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='app_eventos.evento')),
                ('gerado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_gerados', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_gerados', to='app_eventos.templatedocumento')),
            ],
            options={
                'verbose_name': 'Documento Gerado',
                'verbose_name_plural': 'Documentos Gerados',
            },
        ),
        migrations.CreateModel(
            name='TipoVeiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('capacidade_carga', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Capacidade de Carga (kg)')),
                ('capacidade_volume', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Capacidade de Volume (m³)')),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tipos_veiculos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
            ],
            options={
                'verbose_name': 'Tipo de Veículo',
                'verbose_name_plural': 'Tipos de Veículos',
                'unique_together': {('empresa_contratante', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=10, unique=True)),
                ('modelo', models.CharField(max_length=100)),
                ('ano', models.PositiveIntegerField()),
                ('cor', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('disponivel', 'Disponível'), ('em_uso', 'Em Uso'), ('manutencao', 'Em Manutenção'), ('indisponivel', 'Indisponível')], default='disponivel', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='veiculos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('empresa_proprietaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='veiculos', to='app_eventos.empresa', verbose_name='Empresa Proprietária')),
                ('motorista_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='veiculos_responsavel', to='app_eventos.freelance')),
                ('tipo_veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='veiculos', to='app_eventos.tipoveiculo')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
            },
        ),
        migrations.AddField(
            model_name='rotatransporte',
            name='veiculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotas', to='app_eventos.veiculo'),
        ),
        migrations.CreateModel(
            name='InsumoSetor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_necessaria', models.PositiveIntegerField(default=1)),
                ('quantidade_alocada', models.PositiveIntegerField(default=0)),
                ('quantidade_transportada', models.PositiveIntegerField(default=0)),
                ('quantidade_utilizada', models.PositiveIntegerField(default=0, verbose_name='Quantidade Utilizada no Setor')),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('data_necessidade', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('alocado', 'Alocado'), ('em_transporte', 'Em Transporte'), ('entregue', 'Entregue'), ('em_uso', 'Em Uso'), ('finalizado', 'Finalizado'), ('insuficiente', 'Insufficiente')], default='pendente', max_length=20)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('insumo_evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setores_distribuicao', to='app_eventos.insumoevento')),
                ('responsavel_insumo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insumos_responsavel', to='app_eventos.freelance')),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insumos_setor', to='app_eventos.setorevento')),
            ],
            options={
                'verbose_name': 'Insumo do Setor',
                'verbose_name_plural': 'Insumos do Setor',
                'unique_together': {('setor', 'insumo_evento')},
            },
        ),
        migrations.CreateModel(
            name='ControleEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_controle', models.CharField(choices=[('estoque', 'Controle de Estoque'), ('manutencao', 'Manutenção'), ('compra', 'Compra Necessária'), ('aluguel', 'Aluguel'), ('emprestimo', 'Empréstimo'), ('outro', 'Outro')], max_length=20)),
                ('quantidade_atual', models.PositiveIntegerField(default=0)),
                ('quantidade_necessaria', models.PositiveIntegerField(default=0)),
                ('quantidade_em_manutencao', models.PositiveIntegerField(default=0)),
                ('quantidade_para_comprar', models.PositiveIntegerField(default=0)),
                ('quantidade_alugada', models.PositiveIntegerField(default=0)),
                ('data_ultima_verificacao', models.DateTimeField(auto_now_add=True)),
                ('proxima_verificacao', models.DateTimeField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('empresa_contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controles_equipamentos', to='app_eventos.empresacontratante', verbose_name='Empresa Contratante')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controles', to='app_eventos.equipamento')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='controles_equipamentos_responsavel', to='app_eventos.freelance')),
                ('status_equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controles', to='app_eventos.statusequipamento')),
            ],
            options={
                'verbose_name': 'Controle de Equipamento',
                'verbose_name_plural': 'Controles de Equipamentos',
                'unique_together': {('equipamento', 'tipo_controle')},
            },
        ),
    ]
