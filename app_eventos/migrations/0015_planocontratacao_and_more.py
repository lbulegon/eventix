# Generated by Django 5.1.5 on 2025-09-09 06:04
# Fixed version to handle data migration properly

import django.db.models.deletion
from django.db import migrations, models


def create_planos_contratacao(apps, schema_editor):
    """Criar planos de contratação padrão"""
    PlanoContratacao = apps.get_model('app_eventos', 'PlanoContratacao')
    
    planos = [
        {
            'nome': 'Básico',
            'tipo_plano': 'basico',
            'descricao': 'Plano básico para pequenas empresas',
            'max_eventos_mes': 5,
            'max_usuarios': 10,
            'max_freelancers': 50,
            'max_equipamentos': 100,
            'max_locais': 5,
            'suporte_24h': False,
            'relatorios_avancados': False,
            'integracao_api': False,
            'backup_automatico': False,
            'ssl_certificado': False,
            'dominio_personalizado': False,
            'valor_mensal': 99.90,
            'valor_anual': 999.00,
            'desconto_anual': 16.67,
            'ativo': True,
        },
        {
            'nome': 'Profissional',
            'tipo_plano': 'profissional',
            'descricao': 'Plano profissional para empresas em crescimento',
            'max_eventos_mes': 20,
            'max_usuarios': 50,
            'max_freelancers': 200,
            'max_equipamentos': 500,
            'max_locais': 20,
            'suporte_24h': True,
            'relatorios_avancados': True,
            'integracao_api': True,
            'backup_automatico': True,
            'ssl_certificado': True,
            'dominio_personalizado': False,
            'valor_mensal': 299.90,
            'valor_anual': 2999.00,
            'desconto_anual': 16.67,
            'ativo': True,
        },
        {
            'nome': 'Empresarial',
            'tipo_plano': 'empresarial',
            'descricao': 'Plano empresarial para grandes empresas',
            'max_eventos_mes': 100,
            'max_usuarios': 200,
            'max_freelancers': 1000,
            'max_equipamentos': 2000,
            'max_locais': 100,
            'suporte_24h': True,
            'relatorios_avancados': True,
            'integracao_api': True,
            'backup_automatico': True,
            'ssl_certificado': True,
            'dominio_personalizado': True,
            'valor_mensal': 799.90,
            'valor_anual': 7999.00,
            'desconto_anual': 16.67,
            'ativo': True,
        },
        {
            'nome': 'Enterprise',
            'tipo_plano': 'enterprise',
            'descricao': 'Plano enterprise para grandes corporações',
            'max_eventos_mes': -1,  # Ilimitado
            'max_usuarios': -1,     # Ilimitado
            'max_freelancers': -1,  # Ilimitado
            'max_equipamentos': -1, # Ilimitado
            'max_locais': -1,       # Ilimitado
            'suporte_24h': True,
            'relatorios_avancados': True,
            'integracao_api': True,
            'backup_automatico': True,
            'ssl_certificado': True,
            'dominio_personalizado': True,
            'valor_mensal': 1999.90,
            'valor_anual': 19999.00,
            'desconto_anual': 16.67,
            'ativo': True,
        },
        {
            'nome': 'Personalizado',
            'tipo_plano': 'personalizado',
            'descricao': 'Plano personalizado conforme necessidades',
            'max_eventos_mes': 0,
            'max_usuarios': 0,
            'max_freelancers': 0,
            'max_equipamentos': 0,
            'max_locais': 0,
            'suporte_24h': True,
            'relatorios_avancados': True,
            'integracao_api': True,
            'backup_automatico': True,
            'ssl_certificado': True,
            'dominio_personalizado': True,
            'valor_mensal': 0.00,
            'valor_anual': 0.00,
            'desconto_anual': 0.00,
            'ativo': True,
        }
    ]
    
    for plano_data in planos:
        PlanoContratacao.objects.get_or_create(
            nome=plano_data['nome'],
            defaults=plano_data
        )


def migrate_plano_contratado_data(apps, schema_editor):
    """Migrar dados do campo plano_contratado para ForeignKey"""
    EmpresaContratante = apps.get_model('app_eventos', 'EmpresaContratante')
    PlanoContratacao = apps.get_model('app_eventos', 'PlanoContratacao')
    
    # Mapear valores antigos para novos planos
    mapeamento_planos = {
        'premium': 'Profissional',
        'basico': 'Básico',
        'profissional': 'Profissional',
        'empresarial': 'Empresarial',
        'enterprise': 'Enterprise',
        'personalizado': 'Personalizado',
    }
    
    # Atualizar empresas
    for empresa in EmpresaContratante.objects.all():
        if empresa.plano_contratado and empresa.plano_contratado in mapeamento_planos:
            nome_plano = mapeamento_planos[empresa.plano_contratado]
            try:
                plano = PlanoContratacao.objects.get(nome=nome_plano)
                empresa.plano_contratado_fk = plano
                empresa.save()
            except PlanoContratacao.DoesNotExist:
                # Se não encontrar o plano, usar o plano básico
                plano_basico = PlanoContratacao.objects.get(nome='Básico')
                empresa.plano_contratado_fk = plano_basico
                empresa.save()
        else:
            # Se não há plano ou é inválido, usar o plano básico
            plano_basico = PlanoContratacao.objects.get(nome='Básico')
            empresa.plano_contratado_fk = plano_basico
            empresa.save()


def reverse_migrate_plano_contratado_data(apps, schema_editor):
    """Reverter migração de dados"""
    EmpresaContratante = apps.get_model('app_eventos', 'EmpresaContratante')
    
    # Limpar o campo FK
    for empresa in EmpresaContratante.objects.all():
        empresa.plano_contratado_fk = None
        empresa.save()


class Migration(migrations.Migration):

    dependencies = [
        ('app_eventos', '0014_remove_empresa_uniq_empresa_cnpj_por_tenant_and_more'),
    ]

    operations = [
        # 1. Criar modelo PlanoContratacao
        migrations.CreateModel(
            name='PlanoContratacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Plano')),
                ('tipo_plano', models.CharField(choices=[('basico', 'Básico'), ('profissional', 'Profissional'), ('empresarial', 'Empresarial'), ('enterprise', 'Enterprise'), ('personalizado', 'Personalizado')], max_length=20, verbose_name='Tipo de Plano')),
                ('descricao', models.TextField(verbose_name='Descrição do Plano')),
                ('max_eventos_mes', models.IntegerField(verbose_name='Máximo de Eventos por Mês')),
                ('max_usuarios', models.IntegerField(verbose_name='Máximo de Usuários')),
                ('max_freelancers', models.IntegerField(verbose_name='Máximo de Freelancers')),
                ('max_equipamentos', models.IntegerField(verbose_name='Máximo de Equipamentos')),
                ('max_locais', models.IntegerField(verbose_name='Máximo de Locais')),
                ('suporte_24h', models.BooleanField(default=False, verbose_name='Suporte 24h')),
                ('relatorios_avancados', models.BooleanField(default=False, verbose_name='Relatórios Avançados')),
                ('integracao_api', models.BooleanField(default=False, verbose_name='Integração API')),
                ('backup_automatico', models.BooleanField(default=False, verbose_name='Backup Automático')),
                ('ssl_certificado', models.BooleanField(default=False, verbose_name='SSL Certificado')),
                ('dominio_personalizado', models.BooleanField(default=False, verbose_name='Domínio Personalizado')),
                ('valor_mensal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Mensal')),
                ('valor_anual', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Anual (com desconto)')),
                ('desconto_anual', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto Anual (%)')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plano de Contratação',
                'verbose_name_plural': 'Planos de Contratação',
                'ordering': ['valor_mensal'],
            },
        ),
        
        # 2. Popular planos de contratação
        migrations.RunPython(create_planos_contratacao, reverse_code=migrations.RunPython.noop),
        
        # 3. Adicionar campo FK temporário
        migrations.AddField(
            model_name='empresacontratante',
            name='plano_contratado_fk',
            field=models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='empresas_contratantes', to='app_eventos.planocontratacao', verbose_name='Plano Contratado (FK)'),
        ),
        
        # 4. Migrar dados
        migrations.RunPython(migrate_plano_contratado_data, reverse_migrate_plano_contratado_data),
        
        # 5. Remover campo antigo
        migrations.RemoveField(
            model_name='empresacontratante',
            name='plano_contratado',
        ),
        
        # 6. Renomear campo FK
        migrations.RenameField(
            model_name='empresacontratante',
            old_name='plano_contratado_fk',
            new_name='plano_contratado',
        ),
        
        # 7. Tornar campo obrigatório
        migrations.AlterField(
            model_name='empresacontratante',
            name='plano_contratado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='empresas_contratantes', to='app_eventos.planocontratacao', verbose_name='Plano Contratado'),
        ),
        
        # 8. Outras operações da migração original
        migrations.RemoveField(
            model_name='evento',
            name='empresa_contratante_mao_obra',
        ),
        migrations.AddField(
            model_name='evento',
            name='empresa_contratante_recursos',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_contratados', to='app_eventos.empresa', verbose_name='Empresa Contratante de Recursos'),
            preserve_default=False,
        ),
    ]
