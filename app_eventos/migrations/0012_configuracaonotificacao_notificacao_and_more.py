# Generated by Django 5.2.5 on 2025-09-08 04:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_eventos', '0011_permissaosistema_grupousuario_usuariogrupo'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoNotificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_nova_candidatura', models.BooleanField(default=True, verbose_name='Email - Nova Candidatura')),
                ('email_candidatura_aprovada', models.BooleanField(default=True, verbose_name='Email - Candidatura Aprovada')),
                ('email_candidatura_rejeitada', models.BooleanField(default=True, verbose_name='Email - Candidatura Rejeitada')),
                ('email_vaga_publicada', models.BooleanField(default=True, verbose_name='Email - Vaga Publicada')),
                ('email_evento_proximo', models.BooleanField(default=True, verbose_name='Email - Evento Próximo')),
                ('push_nova_candidatura', models.BooleanField(default=True, verbose_name='Push - Nova Candidatura')),
                ('push_candidatura_aprovada', models.BooleanField(default=True, verbose_name='Push - Candidatura Aprovada')),
                ('push_candidatura_rejeitada', models.BooleanField(default=True, verbose_name='Push - Candidatura Rejeitada')),
                ('push_vaga_publicada', models.BooleanField(default=True, verbose_name='Push - Vaga Publicada')),
                ('push_evento_proximo', models.BooleanField(default=True, verbose_name='Push - Evento Próximo')),
                ('receber_emails', models.BooleanField(default=True, verbose_name='Receber Emails')),
                ('receber_push', models.BooleanField(default=True, verbose_name='Receber Notificações Push')),
                ('frequencia_digest', models.CharField(choices=[('imediato', 'Imediato'), ('diario', 'Diário'), ('semanal', 'Semanal')], default='imediato', max_length=10, verbose_name='Frequência do Digest')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
            ],
            options={
                'verbose_name': 'Configuração de Notificação',
                'verbose_name_plural': 'Configurações de Notificação',
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('nova_candidatura', 'Nova Candidatura'), ('candidatura_aprovada', 'Candidatura Aprovada'), ('candidatura_rejeitada', 'Candidatura Rejeitada'), ('vaga_publicada', 'Vaga Publicada'), ('vaga_encerrada', 'Vaga Encerrada'), ('lembrete_candidatura', 'Lembrete de Candidatura'), ('evento_proximo', 'Evento Próximo'), ('contrato_criado', 'Contrato Criado'), ('avaliacao_solicitada', 'Avaliação Solicitada')], max_length=30, verbose_name='Tipo de Notificação')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=10, verbose_name='Prioridade')),
                ('lida', models.BooleanField(default=False, verbose_name='Lida')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_leitura', models.DateTimeField(blank=True, null=True, verbose_name='Data de Leitura')),
                ('acao_url', models.URLField(blank=True, null=True, verbose_name='URL da Ação')),
                ('acao_texto', models.CharField(blank=True, max_length=100, null=True, verbose_name='Texto da Ação')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.AlterModelOptions(
            name='candidatura',
            options={'ordering': ['-data_candidatura'], 'verbose_name': 'Candidatura', 'verbose_name_plural': 'Candidaturas'},
        ),
        migrations.AlterModelOptions(
            name='vaga',
            options={'ordering': ['-data_criacao'], 'verbose_name': 'Vaga', 'verbose_name_plural': 'Vagas'},
        ),
        migrations.AddField(
            model_name='candidatura',
            name='analisado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidaturas_analisadas', to=settings.AUTH_USER_MODEL, verbose_name='Analisado Por'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='carta_apresentacao',
            field=models.TextField(blank=True, help_text='Mensagem do freelancer para a empresa', null=True, verbose_name='Carta de Apresentação'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='comentarios_empresa',
            field=models.TextField(blank=True, null=True, verbose_name='Comentários da Empresa'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='data_analise',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data da Análise'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='data_atualizacao',
            field=models.DateTimeField(auto_now=True, verbose_name='Data de Atualização'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='data_resposta',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data da Resposta'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='disponibilidade',
            field=models.TextField(blank=True, help_text='Horários e dias disponíveis', null=True, verbose_name='Disponibilidade'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='experiencia_relevante',
            field=models.TextField(blank=True, help_text='Experiência específica relacionada à vaga', null=True, verbose_name='Experiência Relevante'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='nota_empresa',
            field=models.PositiveIntegerField(blank=True, help_text='Nota de 1 a 5 dada pela empresa', null=True, verbose_name='Nota da Empresa'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='notificado_empresa',
            field=models.BooleanField(default=False, verbose_name='Notificado Empresa'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='notificado_freelancer',
            field=models.BooleanField(default=False, verbose_name='Notificado Freelancer'),
        ),
        migrations.AddField(
            model_name='candidatura',
            name='prioridade',
            field=models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=10, verbose_name='Prioridade'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='beneficios',
            field=models.TextField(blank=True, null=True, verbose_name='Benefícios'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vagas_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado Por'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='data_atualizacao',
            field=models.DateTimeField(auto_now=True, verbose_name='Data de Atualização'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='data_criacao',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Data de Criação'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vaga',
            name='data_fim_trabalho',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data de Fim do Trabalho'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='data_inicio_trabalho',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data de Início do Trabalho'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='data_limite_candidatura',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data Limite para Candidatura'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='experiencia_minima',
            field=models.PositiveIntegerField(default=0, verbose_name='Experiência Mínima (meses)'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='nivel_experiencia',
            field=models.CharField(choices=[('iniciante', 'Iniciante'), ('intermediario', 'Intermediário'), ('avancado', 'Avançado'), ('especialista', 'Especialista')], default='iniciante', max_length=20, verbose_name='Nível de Experiência'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='publicada',
            field=models.BooleanField(default=False, verbose_name='Vaga Publicada'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='quantidade_preenchida',
            field=models.PositiveIntegerField(default=0, verbose_name='Vagas Preenchidas'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='requisitos',
            field=models.TextField(blank=True, null=True, verbose_name='Requisitos'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='responsabilidades',
            field=models.TextField(blank=True, null=True, verbose_name='Responsabilidades'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='tipo_remuneracao',
            field=models.CharField(choices=[('por_hora', 'Por Hora'), ('por_dia', 'Por Dia'), ('por_evento', 'Por Evento'), ('fixo', 'Valor Fixo')], default='por_dia', max_length=20, verbose_name='Tipo de Remuneração'),
        ),
        migrations.AddField(
            model_name='vaga',
            name='urgente',
            field=models.BooleanField(default=False, verbose_name='Vaga Urgente'),
        ),
        migrations.AlterField(
            model_name='candidatura',
            name='data_candidatura',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Data da Candidatura'),
        ),
        migrations.AlterField(
            model_name='candidatura',
            name='freelance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='app_eventos.freelance', verbose_name='Freelancer'),
        ),
        migrations.AlterField(
            model_name='candidatura',
            name='status',
            field=models.CharField(choices=[('pendente', 'Pendente'), ('em_analise', 'Em Análise'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('cancelado', 'Cancelado'), ('contratado', 'Contratado')], default='pendente', max_length=20, verbose_name='Status da Candidatura'),
        ),
        migrations.AlterField(
            model_name='candidatura',
            name='vaga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='app_eventos.vaga', verbose_name='Vaga'),
        ),
        migrations.AlterField(
            model_name='vaga',
            name='ativa',
            field=models.BooleanField(default=True, verbose_name='Vaga Ativa'),
        ),
        migrations.AlterField(
            model_name='vaga',
            name='descricao',
            field=models.TextField(default='descricao', verbose_name='Descrição da Vaga'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='vaga',
            name='quantidade',
            field=models.PositiveIntegerField(verbose_name='Quantidade de Vagas'),
        ),
        migrations.AlterField(
            model_name='vaga',
            name='remuneracao',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor da Remuneração'),
        ),
        migrations.AlterField(
            model_name='vaga',
            name='titulo',
            field=models.CharField(max_length=200, verbose_name='Título da Vaga'),
        ),
        migrations.AlterUniqueTogether(
            name='candidatura',
            unique_together={('freelance', 'vaga')},
        ),
        migrations.AddConstraint(
            model_name='candidatura',
            constraint=models.CheckConstraint(condition=models.Q(('nota_empresa__gte', 1), ('nota_empresa__lte', 5)), name='nota_empresa_range'),
        ),
        migrations.AddConstraint(
            model_name='vaga',
            constraint=models.CheckConstraint(condition=models.Q(('quantidade_preenchida__lte', models.F('quantidade'))), name='quantidade_preenchida_lte_quantidade'),
        ),
        migrations.AddField(
            model_name='configuracaonotificacao',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracao_notificacao', to=settings.AUTH_USER_MODEL, verbose_name='Usuário'),
        ),
        migrations.AddField(
            model_name='notificacao',
            name='candidatura',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='app_eventos.candidatura', verbose_name='Candidatura'),
        ),
        migrations.AddField(
            model_name='notificacao',
            name='evento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes_sistema', to='app_eventos.evento', verbose_name='Evento'),
        ),
        migrations.AddField(
            model_name='notificacao',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário'),
        ),
        migrations.AddField(
            model_name='notificacao',
            name='vaga',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='app_eventos.vaga', verbose_name='Vaga'),
        ),
        migrations.AddIndex(
            model_name='notificacao',
            index=models.Index(fields=['usuario', 'lida'], name='app_eventos_usuario_bee1a3_idx'),
        ),
        migrations.AddIndex(
            model_name='notificacao',
            index=models.Index(fields=['tipo', 'data_criacao'], name='app_eventos_tipo_f4d272_idx'),
        ),
    ]
