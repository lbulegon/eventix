from django.core.management.base import BaseCommand
from app_eventos.models import Freelance
import logging

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = 'Atualiza o c√≥digo telef√¥nico do pa√≠s para freelancers'

    def handle(self, *args, **options):
        self.stdout.write('üì± ATUALIZANDO C√ìDIGO TELEF√îNICO')
        self.stdout.write('=' * 50)
        
        try:
            # Buscar todos os freelancers
            freelancers = Freelance.objects.all()
            
            self.stdout.write(f"üë• Encontrados {freelancers.count()} freelancers")
            
            for freelancer in freelancers:
                # Se o telefone come√ßa com 55, o c√≥digo j√° est√° no n√∫mero
                if freelancer.telefone and freelancer.telefone.startswith('55'):
                    # Remover o 55 do telefone e definir c√≥digo do pa√≠s
                    telefone_sem_codigo = freelancer.telefone[2:]  # Remove os primeiros 2 d√≠gitos
                    freelancer.telefone = telefone_sem_codigo
                    freelancer.codigo_telefonico_pais = '55'
                    freelancer.save()
                    
                    self.stdout.write(f"‚úÖ {freelancer.nome_completo}: {freelancer.telefone} (c√≥digo: {freelancer.codigo_telefonico_pais})")
                else:
                    # Manter c√≥digo padr√£o 55 para Brasil
                    freelancer.codigo_telefonico_pais = '55'
                    freelancer.save()
                    
                    self.stdout.write(f"üì± {freelancer.nome_completo}: {freelancer.telefone} (c√≥digo: {freelancer.codigo_telefonico_pais})")
            
            self.stdout.write(self.style.SUCCESS("‚úÖ C√≥digos telef√¥nicos atualizados com sucesso!"))
                
        except Exception as e:
            self.stdout.write(self.style.ERROR(f"‚ùå Erro: {str(e)}"))
        
        self.stdout.write('\n‚úÖ Opera√ß√£o conclu√≠da!')
